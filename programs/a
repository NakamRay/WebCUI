constants
0 : nat
s : nat -> nat

function symbols
inc : nat -> nat
double : nat -> nat

inc x => s x
double x => s (s x)


(\x -> double x) 0 -> double 0 -> s (s x)

多相型λ式の自動生成
CUI -> WUIの枠組みを作る(インタプリタのためのWUI作成フレームワーク)

エフェクト付きλ計算λeff-calculus
Unboundを導入
型推論
簡約規則を自分で入力できるシステム
Redexをクリックで選択
wuiでタイプチェック

(a,Char)
問題の等式 unification  problem
a -> b =?= Char 
unifier
rho : a |-> Char, b |-> Int

(a)rho = (Char)rho   ====> Char = Char OK


map :  (INT -> INT) -> (forall a.b. [a] -> [b])

Permutation : how the variables were renamed
名前から名前への双射関数で、名前の有限集合以外のすべての集合では恒等式となるもの