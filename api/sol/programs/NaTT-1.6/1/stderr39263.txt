Input TRS:
    1: active(from(X)) -> mark(cons(X,from(s(X))))
    2: active(sel(0(),cons(X,XS))) -> mark(X)
    3: active(sel(s(N),cons(X,XS))) -> mark(sel(N,XS))
    4: active(minus(X,0())) -> mark(0())
    5: active(minus(s(X),s(Y))) -> mark(minus(X,Y))
    6: active(quot(0(),s(Y))) -> mark(0())
    7: active(quot(s(X),s(Y))) -> mark(s(quot(minus(X,Y),s(Y))))
    8: active(zWquot(XS,nil())) -> mark(nil())
    9: active(zWquot(nil(),XS)) -> mark(nil())
    10: active(zWquot(cons(X,XS),cons(Y,YS))) -> mark(cons(quot(X,Y),zWquot(XS,YS)))
    11: mark(from(X)) -> active(from(mark(X)))
    12: mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
    13: mark(s(X)) -> active(s(mark(X)))
    14: mark(sel(X1,X2)) -> active(sel(mark(X1),mark(X2)))
    15: mark(0()) -> active(0())
    16: mark(minus(X1,X2)) -> active(minus(mark(X1),mark(X2)))
    17: mark(quot(X1,X2)) -> active(quot(mark(X1),mark(X2)))
    18: mark(zWquot(X1,X2)) -> active(zWquot(mark(X1),mark(X2)))
    19: mark(nil()) -> active(nil())
    20: from(mark(X)) -> from(X)
    21: from(active(X)) -> from(X)
    22: cons(mark(X1),X2) -> cons(X1,X2)
    23: cons(X1,mark(X2)) -> cons(X1,X2)
    24: cons(active(X1),X2) -> cons(X1,X2)
    25: cons(X1,active(X2)) -> cons(X1,X2)
    26: s(mark(X)) -> s(X)
    27: s(active(X)) -> s(X)
    28: sel(mark(X1),X2) -> sel(X1,X2)
    29: sel(X1,mark(X2)) -> sel(X1,X2)
    30: sel(active(X1),X2) -> sel(X1,X2)
    31: sel(X1,active(X2)) -> sel(X1,X2)
    32: minus(mark(X1),X2) -> minus(X1,X2)
    33: minus(X1,mark(X2)) -> minus(X1,X2)
    34: minus(active(X1),X2) -> minus(X1,X2)
    35: minus(X1,active(X2)) -> minus(X1,X2)
    36: quot(mark(X1),X2) -> quot(X1,X2)
    37: quot(X1,mark(X2)) -> quot(X1,X2)
    38: quot(active(X1),X2) -> quot(X1,X2)
    39: quot(X1,active(X2)) -> quot(X1,X2)
    40: zWquot(mark(X1),X2) -> zWquot(X1,X2)
    41: zWquot(X1,mark(X2)) -> zWquot(X1,X2)
    42: zWquot(active(X1),X2) -> zWquot(X1,X2)
    43: zWquot(X1,active(X2)) -> zWquot(X1,X2)
    44: map(F[x](),nil()) -> nil()
    45: _(X1,X2) -> X1
    46: _(X1,X2) -> X2
Number of strict rules: 46
Direct POLO(bPol) ... failed.
Uncurrying ... failed.
Dependency Pairs:
   #1: #active(sel(0(),cons(X,XS))) -> #mark(X)
   #2: #zWquot(X1,active(X2)) -> #zWquot(X1,X2)
   #3: #sel(X1,mark(X2)) -> #sel(X1,X2)
   #4: #minus(X1,active(X2)) -> #minus(X1,X2)
   #5: #zWquot(active(X1),X2) -> #zWquot(X1,X2)
   #6: #zWquot(X1,mark(X2)) -> #zWquot(X1,X2)
   #7: #quot(X1,mark(X2)) -> #quot(X1,X2)
   #8: #quot(active(X1),X2) -> #quot(X1,X2)
   #9: #active(quot(0(),s(Y))) -> #mark(0())
   #10: #zWquot(mark(X1),X2) -> #zWquot(X1,X2)
   #11: #mark(s(X)) -> #active(s(mark(X)))
   #12: #mark(s(X)) -> #s(mark(X))
   #13: #mark(s(X)) -> #mark(X)
   #14: #active(zWquot(nil(),XS)) -> #mark(nil())
   #15: #mark(from(X)) -> #active(from(mark(X)))
   #16: #mark(from(X)) -> #from(mark(X))
   #17: #mark(from(X)) -> #mark(X)
   #18: #cons(active(X1),X2) -> #cons(X1,X2)
   #19: #cons(X1,mark(X2)) -> #cons(X1,X2)
   #20: #mark(cons(X1,X2)) -> #active(cons(mark(X1),X2))
   #21: #mark(cons(X1,X2)) -> #cons(mark(X1),X2)
   #22: #mark(cons(X1,X2)) -> #mark(X1)
   #23: #sel(X1,active(X2)) -> #sel(X1,X2)
   #24: #mark(sel(X1,X2)) -> #active(sel(mark(X1),mark(X2)))
   #25: #mark(sel(X1,X2)) -> #sel(mark(X1),mark(X2))
   #26: #mark(sel(X1,X2)) -> #mark(X1)
   #27: #mark(sel(X1,X2)) -> #mark(X2)
   #28: #sel(active(X1),X2) -> #sel(X1,X2)
   #29: #cons(X1,active(X2)) -> #cons(X1,X2)
   #30: #from(mark(X)) -> #from(X)
   #31: #active(quot(s(X),s(Y))) -> #mark(s(quot(minus(X,Y),s(Y))))
   #32: #active(quot(s(X),s(Y))) -> #s(quot(minus(X,Y),s(Y)))
   #33: #active(quot(s(X),s(Y))) -> #quot(minus(X,Y),s(Y))
   #34: #active(quot(s(X),s(Y))) -> #minus(X,Y)
   #35: #quot(X1,active(X2)) -> #quot(X1,X2)
   #36: #active(zWquot(cons(X,XS),cons(Y,YS))) -> #mark(cons(quot(X,Y),zWquot(XS,YS)))
   #37: #active(zWquot(cons(X,XS),cons(Y,YS))) -> #cons(quot(X,Y),zWquot(XS,YS))
   #38: #active(zWquot(cons(X,XS),cons(Y,YS))) -> #quot(X,Y)
   #39: #active(zWquot(cons(X,XS),cons(Y,YS))) -> #zWquot(XS,YS)
   #40: #minus(X1,mark(X2)) -> #minus(X1,X2)
   #41: #active(minus(s(X),s(Y))) -> #mark(minus(X,Y))
   #42: #active(minus(s(X),s(Y))) -> #minus(X,Y)
   #43: #sel(mark(X1),X2) -> #sel(X1,X2)
   #44: #cons(mark(X1),X2) -> #cons(X1,X2)
   #45: #minus(active(X1),X2) -> #minus(X1,X2)
   #46: #s(active(X)) -> #s(X)
   #47: #mark(quot(X1,X2)) -> #active(quot(mark(X1),mark(X2)))
   #48: #mark(quot(X1,X2)) -> #quot(mark(X1),mark(X2))
   #49: #mark(quot(X1,X2)) -> #mark(X1)
   #50: #mark(quot(X1,X2)) -> #mark(X2)
   #51: #minus(mark(X1),X2) -> #minus(X1,X2)
   #52: #mark(nil()) -> #active(nil())
   #53: #s(mark(X)) -> #s(X)
   #54: #quot(mark(X1),X2) -> #quot(X1,X2)
   #55: #from(active(X)) -> #from(X)
   #56: #mark(minus(X1,X2)) -> #active(minus(mark(X1),mark(X2)))
   #57: #mark(minus(X1,X2)) -> #minus(mark(X1),mark(X2))
   #58: #mark(minus(X1,X2)) -> #mark(X1)
   #59: #mark(minus(X1,X2)) -> #mark(X2)
   #60: #active(sel(s(N),cons(X,XS))) -> #mark(sel(N,XS))
   #61: #active(sel(s(N),cons(X,XS))) -> #sel(N,XS)
   #62: #active(from(X)) -> #mark(cons(X,from(s(X))))
   #63: #active(from(X)) -> #cons(X,from(s(X)))
   #64: #active(from(X)) -> #from(s(X))
   #65: #active(from(X)) -> #s(X)
   #66: #active(zWquot(XS,nil())) -> #mark(nil())
   #67: #mark(0()) -> #active(0())
   #68: #active(minus(X,0())) -> #mark(0())
   #69: #mark(zWquot(X1,X2)) -> #active(zWquot(mark(X1),mark(X2)))
   #70: #mark(zWquot(X1,X2)) -> #zWquot(mark(X1),mark(X2))
   #71: #mark(zWquot(X1,X2)) -> #mark(X1)
   #72: #mark(zWquot(X1,X2)) -> #mark(X2)
Number of SCCs: 8, DPs: 46
  SCC { #30 #55 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: x1
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #30 #55
Number of SCCs: 7, DPs: 44
  SCC { #46 #53 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: x1
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #46 #53
Number of SCCs: 6, DPs: 42
  SCC { #4 #40 #45 #51 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: x1
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #45 #51
Number of SCCs: 6, DPs: 40
  SCC { #4 #40 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: x2
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #4 #40
Number of SCCs: 5, DPs: 38
  SCC { #7 #8 #35 #54 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: x1
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #8 #54
Number of SCCs: 5, DPs: 36
  SCC { #7 #35 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: x2
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #7 #35
Number of SCCs: 4, DPs: 34
  SCC { #18 #19 #29 #44 }
POLO(Sum)... succeeded.
      #cons	w: x1
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #18 #44
Number of SCCs: 4, DPs: 32
  SCC { #19 #29 }
POLO(Sum)... succeeded.
      #cons	w: x2
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #19 #29
Number of SCCs: 3, DPs: 30
  SCC { #3 #23 #28 #43 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: x2
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #3 #23
Number of SCCs: 3, DPs: 28
  SCC { #28 #43 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: 0
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: x1
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #28 #43
Number of SCCs: 2, DPs: 26
  SCC { #2 #5 #6 #10 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: x1
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #5 #10
Number of SCCs: 2, DPs: 24
  SCC { #2 #6 }
POLO(Sum)... succeeded.
      #cons	w: 0
      s 	w: 0
      #zWquot	w: x2
      minus	w: 0
      zWquot	w: 0
      _ 	w: 0
      #mark	w: 0
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: 0
      sel	w: 0
      #s 	w: 0
      nil	w: 0
      mark	w: x1 + 1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1 + 1
      cons	w: 0
      #active	w: 0
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { }
    Removed DPs: #2 #6
Number of SCCs: 1, DPs: 22
  SCC { #1 #13 #15 #17 #22 #24 #26 #27 #31 #36 #41 #47 #49 #50 #56 #58..60 #62 #69 #71 #72 }
POLO(Sum)... POLO(max)... succeeded.
      #cons	w: 0
      s 	w: x1
      #zWquot	w: 0
      minus	w: max(x1, x2 + 1)
      zWquot	w: max(x1 + 7, x2 + 3)
      _ 	w: 0
      #mark	w: x1
      0 	w: 4
      quot	w: max(x1 + 1, x2 + 3)
      #sel	w: 0
      from	w: x1 + 4
      sel	w: max(x1 + 1, x2 + 2)
      #s 	w: 0
      nil	w: 8
      mark	w: x1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1
      cons	w: max(x1 + 3, x2)
      #active	w: x1
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { 1..43 }
    Removed DPs: #1 #17 #22 #26 #27 #49 #50 #59 #71 #72
Number of SCCs: 2, DPs: 8
  SCC { #24 #60 }
POLO(Sum)... POLO(max)... QLPOS... POLO(mSum)... QWPOpS(mSum)... succeeded.
      #cons	s: [1]	p: 0	w: max(x1)
      s 	s: [1]	p: 0	w: x1
      #zWquot	s: [1,2]	p: 0	w: x1 + x2 + 1
      minus	s: []	p: 0	w: 0
      zWquot	s: []	p: 4	w: x1 + x2
      _ 	s: [2,1]	p: 0	w: x1 + x2
      #mark	s: [1]	p: 3	w: x1 + 4
      0 	s: []	p: 0	w: 0
      quot	s: [2,1]	p: 2	w: max(x1 + 1, x2 + 2)
      #sel	s: [2]	p: 0	w: x2 + 1
      from	s: [1]	p: 0	w: x1 + 4
      sel	s: [1,2]	p: 1	w: x1 + x2 + 4
      #s 	s: []	p: 0	w: 0
      nil	s: []	p: 3	w: 1
      mark	s: 1
      map	s: [1]	p: 0	w: x1
      #map	s: [1]	p: 0	w: x1
      #minus	s: [2]	p: 0	w: max(x2)
      #_ 	s: []	p: 0	w: 0
      #from	s: []	p: 0	w: 0
      active	s: 1
      cons	s: []	p: 0	w: max(x1 + 3, x2)
      #active	s: [1]	p: 3	w: x1 + 4
      #quot	s: [2]	p: 0	w: max(x2)
      F[x]	s: []	p: 0	w: 1
    USABLE RULES: { 1..43 }
    Removed DPs: #60
Number of SCCs: 1, DPs: 6
  SCC { #13 #31 #41 #47 #56 #58 }
POLO(Sum)... POLO(max)... succeeded.
      #cons	w: 0
      s 	w: x1
      #zWquot	w: 0
      minus	w: max(x1 + 1, x2 + 2)
      zWquot	w: 0
      _ 	w: 0
      #mark	w: x1 + 1
      0 	w: 0
      quot	w: 0
      #sel	w: 0
      from	w: x1 + 7
      sel	w: max(x2 + 2)
      #s 	w: 0
      nil	w: 0
      mark	w: x1
      map	w: 0
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: x1
      cons	w: max(x1, x2)
      #active	w: x1 + 1
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { 1..43 }
    Removed DPs: #58
Number of SCCs: 2, DPs: 5
  SCC { #41 #56 }
POLO(Sum)... POLO(max)... QLPOS... POLO(mSum)... succeeded.
      #cons	w: 0
      s 	w: max(x1 + 4, 0)
      #zWquot	w: max(x1 - 1, 0)
      minus	w: max(x1 - 1, 0)
      zWquot	w: max(x1 + 5, 0)
      _ 	w: 0
      #mark	w: max(x1 + 4, 0)
      0 	w: 0
      quot	w: max(x1 + 4, 0)
      #sel	w: 0
      from	w: max(x1, 0)
      sel	w: max(x1 + x2 + 4, 0)
      #s 	w: max(x1 - 1, 0)
      nil	w: 1
      mark	w: max(x1, 0)
      map	w: max(x2 - 1, 0)
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: max(x1, 0)
      cons	w: max(x1 - 4, x2 - 4, 0)
      #active	w: max(x1 + 2, 0)
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { 1..43 }
    Removed DPs: #41 #56
Number of SCCs: 1, DPs: 3
  SCC { #13 #31 #47 }
POLO(Sum)... POLO(max)... QLPOS... POLO(mSum)... succeeded.
      #cons	w: 0
      s 	w: max(x1 + 4, 0)
      #zWquot	w: max(x1 - 1, 0)
      minus	w: max(x1 - 1, 0)
      zWquot	w: max(x1 + 5, 0)
      _ 	w: 0
      #mark	w: max(x1 + 3, 0)
      0 	w: 0
      quot	w: max(x1 + 4, 0)
      #sel	w: 0
      from	w: max(x1, 0)
      sel	w: max(x1 + x2 + 4, 0)
      #s 	w: max(x1 - 1, 0)
      nil	w: 1
      mark	w: max(x1, 0)
      map	w: max(x2 - 1, 0)
      #map	w: 0
      #minus	w: 0
      #_ 	w: 0
      #from	w: 0
      active	w: max(x1, 0)
      cons	w: max(x1 - 4, x2 - 4, 0)
      #active	w: max(x1 + 3, 0)
      #quot	w: 0
      F[x]	w: 0
    USABLE RULES: { 1..43 }
    Removed DPs: #13
Number of SCCs: 0, DPs: 0
