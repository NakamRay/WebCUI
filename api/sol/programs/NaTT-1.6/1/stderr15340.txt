Input TRS:
    1: sum(nil(),X) -> X
    2: sum(X,nil()) -> X
    3: sum(X,Y) -> sum(Y,X)
    4: sum(sum(X,Y),Z) -> sum(X,sum(Y,Z))
    5: _(X1,X2) -> X1
    6: _(X1,X2) -> X2
Number of strict rules: 6
Direct POLO(bPol) ... removes: 1 5 6 2
      _ 	w: 2 * x1 + 2 * x2 + 1
      sum	w: x1 + x2 + 1
      nil	w: 1
Number of strict rules: 2
Direct POLO(bPol) ... failed.
Uncurrying ... failed.
Dependency Pairs:
   #1: #sum(X,Y) -> #sum(Y,X)
   #2: #sum(sum(X,Y),Z) -> #sum(X,sum(Y,Z))
   #3: #sum(sum(X,Y),Z) -> #sum(Y,Z)
Number of SCCs: 1, DPs: 3
  SCC { #1..3 }
POLO(Sum)... succeeded.
      _ 	w: 0
      sum	w: x1 + x2 + 1
      nil	w: 0
      #sum	w: x1 + x2
    USABLE RULES: { 3 4 }
    Removed DPs: #3
Number of SCCs: 1, DPs: 2
  SCC { #1 #2 }
POLO(Sum)... POLO(max)... QLPOS... POLO(mSum)... QWPOpS(mSum)... Mat2b... failed.
Finding a loop...  found.
  #sum(Y_{1},X_{1})	-#1->
  #sum(X_{1},Y_{1})	--->*
  #sum(X_{1},Y_{1})
  Looping with: [ Y_{1} := X_{1}; X_{1} := Y_{1}; ]
