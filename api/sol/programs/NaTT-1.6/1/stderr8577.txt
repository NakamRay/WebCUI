Input TRS:
    1: f(g(X),s(0()),Y) -> f(Y,Y,g(X))
    2: g(s(U)) -> s(g(U))
    3: g(0()) -> 0()
    4: map(H,nil()) -> nil()
    5: map(I,cons(P,X1)) -> cons(I[P](),map(I,X1))
    6: filter(Z1,nil()) -> nil()
    7: filter(G1,cons(V1,W1)) -> filter2(G1[V1](),G1,V1,W1)
    8: filter2(true(),J1,X2,Y2) -> cons(X2,filter(J1,Y2))
    9: filter2(false(),G2,V2,W2) -> filter(G2,W2)
Number of strict rules: 9
Direct POLO(bPol) ... failed.
Uncurrying filter2
1: f(g(X),s(0()),Y) -> f(Y,Y,g(X))
2: g(s(U)) -> s(g(U))
3: g(0()) -> 0()
4: map(H,nil()) -> nil()
5: map(I,cons(P,X1)) -> cons(I[P](),map(I,X1))
6: filter(Z1,nil()) -> nil()
7: filter(G1,cons(V1,W1)) -> filter2^1_G1[V1](G1,V1,W1)
8: filter2^1_true(J1,X2,Y2) -> cons(X2,filter(J1,Y2))
9: filter2^1_false(G2,V2,W2) -> filter(G2,W2)
10: filter2(G1[V1](),_3,_4,_5) ->= filter2^1_G1[V1](_3,_4,_5)
11: filter2(false(),_3,_4,_5) ->= filter2^1_false(_3,_4,_5)
12: filter2(true(),_3,_4,_5) ->= filter2^1_true(_3,_4,_5)
Number of strict rules: 9
Direct POLO(bPol) ... failed.
Dependency Pairs:
   #1: #g(s(U)) -> #g(U)
   #2: #filter2^1_false(G2,V2,W2) -> #filter(G2,W2)
   #3: #filter2(false(),_3,_4,_5) ->? #filter2^1_false(_3,_4,_5)
   #4: #filter2(true(),_3,_4,_5) ->? #filter2^1_true(_3,_4,_5)
   #5: #map(I,cons(P,X1)) -> #map(I,X1)
   #6: #f(g(X),s(0()),Y) -> #f(Y,Y,g(X))
   #7: #filter2^1_true(J1,X2,Y2) -> #filter(J1,Y2)
Number of SCCs: 3, DPs: 3
  SCC { #1 }
POLO(Sum)... succeeded.
      G1[V1]	w: 0
      s 	w: x1 + 1
      #filter2	w: 0
      I[P]	w: 0
      #filter	w: 0
      false	w: 0
      filter2^1_false	w: 0
      #filter2^1_true	w: 0
      true	w: 0
      f 	w: 0
      filter2	w: 0
      0 	w: 0
      nil	w: 0
      #f 	w: 0
      #g 	w: x1
      map	w: 0
      #map	w: 0
      cons	w: 0
      filter2^1_G1[V1]	w: 0
      filter	w: 0
      #filter2^1_false	w: 0
      filter2^1_true	w: 0
      g 	w: 0
    USABLE RULES: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 2
  SCC { #5 }
POLO(Sum)... succeeded.
      G1[V1]	w: 0
      s 	w: 1
      #filter2	w: 0
      I[P]	w: 0
      #filter	w: 0
      false	w: 0
      filter2^1_false	w: 0
      #filter2^1_true	w: 0
      true	w: 0
      f 	w: 0
      filter2	w: 0
      0 	w: 0
      nil	w: 0
      #f 	w: 0
      #g 	w: 0
      map	w: 0
      #map	w: x2
      cons	w: x2 + 1
      filter2^1_G1[V1]	w: 0
      filter	w: 0
      #filter2^1_false	w: 0
      filter2^1_true	w: 0
      g 	w: 0
    USABLE RULES: { }
    Removed DPs: #5
Number of SCCs: 1, DPs: 1
  SCC { #6 }
POLO(Sum)... POLO(max)... QLPOS... POLO(mSum)... QWPOpS(mSum)... Mat2b... failed.
Finding a loop...  failed.
