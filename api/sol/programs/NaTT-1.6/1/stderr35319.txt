Input TRS:
    1: minus(X,0()) -> X
    2: minus(s(Y),s(U)) -> minus(Y,U)
    3: minus(minus(V,W),P) -> minus(V,plus(W,P))
    4: quot(0(),s(X1)) -> 0()
    5: quot(s(Y1),s(U1)) -> s(quot(minus(Y1,U1),s(U1)))
    6: plus(0(),V1) -> V1
    7: plus(s(W1),P1) -> s(plus(W1,P1))
    8: app(nil(),X2) -> X2
    9: app(Y2,nil()) -> Y2
    10: app(cons(W2,V2),U2) -> cons(W2,app(V2,U2))
    11: sum(cons(P2,nil())) -> cons(P2,nil())
    12: sum(cons(Y3,cons(U3,X3))) -> sum(cons(plus(Y3,U3),X3))
    13: sum(app(W3,cons(P3,cons(X4,V3)))) -> sum(app(W3,sum(cons(P3,cons(X4,V3)))))
    14: _(X1,X2) -> X1
    15: _(X1,X2) -> X2
Number of strict rules: 15
Direct POLO(bPol) ... failed.
Uncurrying ... failed.
Dependency Pairs:
   #1: #minus(s(Y),s(U)) -> #minus(Y,U)
   #2: #sum(app(W3,cons(P3,cons(X4,V3)))) -> #sum(app(W3,sum(cons(P3,cons(X4,V3)))))
   #3: #sum(app(W3,cons(P3,cons(X4,V3)))) -> #app(W3,sum(cons(P3,cons(X4,V3))))
   #4: #sum(app(W3,cons(P3,cons(X4,V3)))) -> #sum(cons(P3,cons(X4,V3)))
   #5: #sum(cons(Y3,cons(U3,X3))) -> #sum(cons(plus(Y3,U3),X3))
   #6: #sum(cons(Y3,cons(U3,X3))) -> #plus(Y3,U3)
   #7: #plus(s(W1),P1) -> #plus(W1,P1)
   #8: #app(cons(W2,V2),U2) -> #app(V2,U2)
   #9: #quot(s(Y1),s(U1)) -> #quot(minus(Y1,U1),s(U1))
   #10: #quot(s(Y1),s(U1)) -> #minus(Y1,U1)
   #11: #minus(minus(V,W),P) -> #minus(V,plus(W,P))
   #12: #minus(minus(V,W),P) -> #plus(W,P)
Number of SCCs: 6, DPs: 7
  SCC { #7 }
POLO(Sum)... succeeded.
      s 	w: x1 + 1
      minus	w: 0
      #plus	w: x1
      _ 	w: 0
      sum	w: 0
      0 	w: 0
      quot	w: 0
      nil	w: 0
      #app	w: 0
      #minus	w: 0
      #_ 	w: 0
      plus	w: 0
      cons	w: 0
      #quot	w: 0
      #sum	w: 0
      app	w: 0
    USABLE RULES: { }
    Removed DPs: #7
Number of SCCs: 5, DPs: 6
  SCC { #8 }
POLO(Sum)... succeeded.
      s 	w: 1
      minus	w: 0
      #plus	w: 0
      _ 	w: 0
      sum	w: 0
      0 	w: 0
      quot	w: 0
      nil	w: 0
      #app	w: x1
      #minus	w: 0
      #_ 	w: 0
      plus	w: 0
      cons	w: x2 + 1
      #quot	w: 0
      #sum	w: 0
      app	w: 0
    USABLE RULES: { }
    Removed DPs: #8
Number of SCCs: 4, DPs: 5
  SCC { #9 }
POLO(Sum)... succeeded.
      s 	w: x1 + 2
      minus	w: x1 + 1
      #plus	w: 0
      _ 	w: 0
      sum	w: 0
      0 	w: 1
      quot	w: 0
      nil	w: 0
      #app	w: 0
      #minus	w: 0
      #_ 	w: 0
      plus	w: x1 + x2 + 1
      cons	w: 1
      #quot	w: x1
      #sum	w: 0
      app	w: 0
    USABLE RULES: { 1..3 6 7 }
    Removed DPs: #9
Number of SCCs: 3, DPs: 4
  SCC { #5 }
POLO(Sum)... succeeded.
      s 	w: x1 + 2
      minus	w: x1 + 1
      #plus	w: 0
      _ 	w: 0
      sum	w: 0
      0 	w: 1
      quot	w: 0
      nil	w: 0
      #app	w: 0
      #minus	w: 0
      #_ 	w: 0
      plus	w: x1 + x2 + 1
      cons	w: x1 + x2 + 2
      #quot	w: x1
      #sum	w: x1
      app	w: 0
    USABLE RULES: { 1..3 6 7 }
    Removed DPs: #5
Number of SCCs: 2, DPs: 3
  SCC { #2 }
POLO(Sum)... succeeded.
      s 	w: x1 + 2
      minus	w: x1 + 1
      #plus	w: 0
      _ 	w: 0
      sum	w: 3
      0 	w: 1
      quot	w: 0
      nil	w: 1
      #app	w: 0
      #minus	w: 0
      #_ 	w: 0
      plus	w: x1 + x2 + 1
      cons	w: x2 + 2
      #quot	w: x1
      #sum	w: x1
      app	w: x1 + x2 + 1
    USABLE RULES: { 1..3 6..12 }
    Removed DPs: #2
Number of SCCs: 1, DPs: 2
  SCC { #1 #11 }
POLO(Sum)... succeeded.
      s 	w: x1 + 2
      minus	w: x1 + x2 + 2
      #plus	w: 0
      _ 	w: 0
      sum	w: 3
      0 	w: 0
      quot	w: 0
      nil	w: 1
      #app	w: 0
      #minus	w: x1 + x2
      #_ 	w: 0
      plus	w: x1 + x2 + 1
      cons	w: x2 + 2
      #quot	w: x1
      #sum	w: x1
      app	w: x1 + x2 + 1
    USABLE RULES: { 1..3 6..12 }
    Removed DPs: #1 #11
Number of SCCs: 0, DPs: 0
