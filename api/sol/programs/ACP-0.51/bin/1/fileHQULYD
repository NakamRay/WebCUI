Rewrite Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
Apply Direct Methods...
Inner CPs:
   [ sum(?X,?Z_2) = sum(nil,sum(?X,?Z_2)),
     sum(sum(?Y_1,?X_1),?Z_2) = sum(?X_1,sum(?Y_1,?Z_2)),
     sum(sum(?X,sum(?Y,?Z)),?Z_1) = sum(sum(?X,?Y),sum(?Z,?Z_1)) ]
Outer CPs:
   [ ?X = sum(?X,nil),
     sum(?Y_1,sum(?X_2,?Y_2)) = sum(?X_2,sum(?Y_2,?Y_1)) ]
not Overlay, check Termination...
unknown/not Terminating
unknown Knuth & Bendix
Linear
unknown Development Closed
unknown Strongly Closed
unknown Weakly-Non-Overlapping & Non-Collapsing & Shallow
unknown Upside-Parallel-Closed/Outside-Closed
(inner) Parallel CPs: (not computed)
unknown Toyama (Parallel CPs)
Simultaneous CPs:
   [ sum(?X,nil) = ?X,
     sum(nil,sum(?X,?Z_3)) = sum(?X,?Z_3),
     ?Y = sum(?Y,nil),
     sum(?X_2,sum(?Y_2,?Y)) = sum(?Y,sum(?X_2,?Y_2)),
     sum(?X,sum(?Y,?Z_3)) = sum(sum(?Y,?X),?Z_3),
     sum(?Z,sum(?X_1,sum(?Y_1,?Y))) = sum(sum(?X_1,?Y_1),sum(?Y,?Z)),
     sum(?Z,?Y) = sum(nil,sum(?Y,?Z)),
     sum(?Z,sum(?Y,?X)) = sum(?X,sum(?Y,?Z)),
     sum(?Z,sum(?X,?Y)) = sum(?X,sum(?Y,?Z)),
     sum(sum(?X_1,sum(?Y_1,?Y)),?Z) = sum(sum(?X_1,?Y_1),sum(?Y,?Z)),
     sum(?Y,?Z) = sum(nil,sum(?Y,?Z)),
     sum(sum(?Y,?X),?Z) = sum(?X,sum(?Y,?Z)),
     sum(sum(?X_2,sum(?Y_2,?Y)),sum(?Z,?Z_1)) = sum(sum(sum(?X_2,?Y_2),sum(?Y,?Z)),?Z_1),
     sum(?Y,sum(?Z,?Z_1)) = sum(sum(nil,sum(?Y,?Z)),?Z_1),
     sum(sum(?Y,?X),sum(?Z,?Z_1)) = sum(sum(?X,sum(?Y,?Z)),?Z_1),
     sum(sum(?X,?Y),sum(?Z,?Z_1)) = sum(sum(?X,sum(?Y,?Z)),?Z_1) ]
unknown Okui (Simultaneous CPs)
unknown Strongly Depth-Preserving & Root-E-Closed/Non-E-Overlapping
unknown Strongly Weight-Preserving & Root-E-Closed/Non-E-Overlapping
check Locally Decreasing Diagrams by Rule Labelling...
Critical Pair <sum(?X,?Z_2), sum(nil,sum(?X,?Z_2))> by Rules <0, 2> preceded by [(sum,1)]
 joinable by a reduction of rules <[], [([],0)]>
Critical Pair <sum(sum(?Y_1,?X_1),?Z_2), sum(?X_1,sum(?Y_1,?Z_2))> by Rules <1, 2> preceded by [(sum,1)]
 joinable by a reduction of rules <[([(sum,1)],1),([],2)], []>
 joinable by a reduction of rules <[([],2),([(sum,2)],1)], [([],1),([],2)]>
Critical Pair <sum(sum(?X,sum(?Y,?Z)),?Z_1), sum(sum(?X,?Y),sum(?Z,?Z_1))> by Rules <2, 2> preceded by [(sum,1)]
 joinable by a reduction of rules <[([],2),([(sum,2)],2)], [([],2)]>
Critical Pair <sum(?Y_1,nil), ?Y_1> by Rules <1, 0> preceded by []
 joinable by a reduction of rules <[([],1),([],0)], []>
Critical Pair <sum(?X_2,sum(?Y_2,?Z_2)), sum(?Z_2,sum(?X_2,?Y_2))> by Rules <2, 1> preceded by []
 joinable by a reduction of rules <[], [([],1),([],2)]>
unknown Diagram Decreasing
check Non-Confluence...
obtain 6 rules by 3 steps unfolding
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)),
     sum(?X,nil) -> ?X,
     sum(?X,?Y) -> sum(?X,?Y),
     sum(?X,sum(nil,nil)) -> ?X ]
19 critical pairs found (<= 100 will be examined).
   [ sum(?X_4,nil) = ?X_4,
     sum(?X_5,nil) = ?X_5,
     sum(?Y_1,nil) = ?Y_1,
     sum(nil,?X_3) = ?X_3,
     sum(nil,?Y_4) = ?Y_4,
     sum(nil,nil) = nil,
     sum(?Y_4,?X_4) = sum(?X_4,?Y_4),
     sum(?X_5,sum(nil,nil)) = ?X_5,
     sum(sum(nil,nil),?X_5) = ?X_5,
     sum(?X_2,sum(?Y_2,nil)) = sum(?X_2,?Y_2),
     sum(?X_3,sum(nil,?Z_2)) = sum(?X_3,?Z_2),
     sum(nil,sum(?X,?Z_2)) = sum(?X,?Z_2),
     sum(?X_1,sum(?Y_1,?Z_2)) = sum(sum(?Y_1,?X_1),?Z_2),
     sum(?X_2,sum(?Y_2,?Y_4)) = sum(sum(?X_2,?Y_2),?Y_4),
     sum(?X_4,sum(?Y_4,?Z_2)) = sum(sum(?X_4,?Y_4),?Z_2),
     sum(?Z_2,sum(?X_2,?Y_2)) = sum(?X_2,sum(?Y_2,?Z_2)),
     sum(?X_2,sum(?Y_2,sum(nil,nil))) = sum(?X_2,?Y_2),
     sum(?X_5,sum(sum(nil,nil),?Z_2)) = sum(?X_5,?Z_2),
     sum(sum(?X,?Y),sum(?Z,?Z_1)) = sum(sum(?X,sum(?Y,?Z)),?Z_1) ]
strenghten sum(c_1,nil) and c_1
strenghten sum(nil,c_1) and c_1
strenghten sum(nil,nil) and nil
strenghten sum(c_2,c_1) and sum(c_1,c_2)
strenghten sum(c_1,sum(nil,nil)) and c_1
strenghten sum(sum(nil,nil),c_1) and c_1
strenghten sum(c_1,sum(c_2,nil)) and sum(c_1,c_2)
strenghten sum(c_1,sum(nil,c_2)) and sum(c_1,c_2)
strenghten sum(nil,sum(c_1,c_2)) and sum(c_1,c_2)
strenghten sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_1),c_3)
strenghten sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_2),c_3)
strenghten sum(c_3,sum(c_1,c_2)) and sum(c_1,sum(c_2,c_3))
strenghten sum(c_1,sum(c_2,sum(nil,nil))) and sum(c_1,c_2)
strenghten sum(c_1,sum(sum(nil,nil),c_2)) and sum(c_1,c_2)
strenghten sum(sum(c_1,c_2),sum(c_3,c_4)) and sum(sum(c_1,sum(c_2,c_3)),c_4)
candidates for finding a counterexample:
   [ sum(c_1,nil) = c_1,
     sum(nil,c_1) = c_1,
     sum(nil,nil) = nil,
     sum(c_1,c_2) = sum(c_2,c_1),
     sum(c_2,c_1) = sum(c_1,c_2),
     sum(c_1,sum(nil,nil)) = c_1,
     sum(nil,sum(c_1,nil)) = c_1,
     sum(nil,sum(nil,c_1)) = c_1,
     sum(sum(c_1,nil),nil) = c_1,
     sum(sum(nil,c_1),nil) = c_1,
     sum(sum(nil,nil),c_1) = c_1,
     sum(c_1,sum(c_2,nil)) = sum(c_1,c_2),
     sum(c_1,sum(c_2,nil)) = sum(c_2,c_1),
     sum(c_1,sum(nil,c_2)) = sum(c_1,c_2),
     sum(c_1,sum(nil,c_2)) = sum(c_2,c_1),
     sum(c_2,sum(c_1,nil)) = sum(c_1,c_2),
     sum(c_2,sum(c_1,nil)) = sum(c_2,c_1),
     sum(c_2,sum(nil,c_1)) = sum(c_1,c_2),
     sum(c_2,sum(nil,c_1)) = sum(c_2,c_1),
     sum(nil,sum(c_1,c_2)) = sum(c_1,c_2),
     sum(nil,sum(c_1,c_2)) = sum(c_2,c_1),
     sum(nil,sum(c_2,c_1)) = sum(c_1,c_2),
     sum(nil,sum(c_2,c_1)) = sum(c_2,c_1),
     sum(sum(c_1,c_2),nil) = sum(c_1,c_2),
     sum(sum(c_1,c_2),nil) = sum(c_2,c_1),
     sum(sum(c_2,c_1),nil) = sum(c_1,c_2),
     sum(sum(c_2,c_1),nil) = sum(c_2,c_1),
     sum(sum(c_2,nil),c_1) = sum(c_1,c_2),
     sum(sum(c_2,nil),c_1) = sum(c_2,c_1),
     sum(sum(nil,c_1),c_2) = sum(c_1,c_2),
     sum(sum(nil,c_1),c_2) = sum(c_2,c_1),
     sum(sum(nil,c_2),c_1) = sum(c_1,c_2),
     sum(sum(nil,c_2),c_1) = sum(c_2,c_1),
     sum(c_1,sum(c_2,c_3)) = sum(c_1,sum(c_3,c_2)),
     sum(c_1,sum(c_2,c_3)) = sum(c_2,sum(c_1,c_3)),
     sum(c_1,sum(c_2,c_3)) = sum(c_2,sum(c_3,c_1)),
     sum(c_1,sum(c_2,c_3)) = sum(c_3,sum(c_1,c_2)),
     sum(c_1,sum(c_2,c_3)) = sum(c_3,sum(c_2,c_1)),
     sum(c_1,sum(c_2,c_3)) = sum(sum(c_1,c_2),c_3),
     sum(c_1,sum(c_2,c_3)) = sum(sum(c_1,c_3),c_2),
     sum(c_1,sum(c_2,c_3)) = sum(sum(c_2,c_1),c_3),
     sum(c_1,sum(c_2,c_3)) = sum(sum(c_2,c_3),c_1),
     sum(c_1,sum(c_2,c_3)) = sum(sum(c_3,c_1),c_2),
     sum(c_1,sum(c_2,c_3)) = sum(sum(c_3,c_2),c_1),
     sum(c_1,sum(c_3,c_2)) = sum(c_1,sum(c_2,c_3)),
     sum(c_1,sum(c_3,c_2)) = sum(c_2,sum(c_1,c_3)),
     sum(c_1,sum(c_3,c_2)) = sum(c_2,sum(c_3,c_1)),
     sum(c_1,sum(c_3,c_2)) = sum(c_3,sum(c_1,c_2)),
     sum(c_1,sum(c_3,c_2)) = sum(c_3,sum(c_2,c_1)),
     sum(c_1,sum(c_3,c_2)) = sum(sum(c_1,c_2),c_3),
     sum(c_1,sum(c_3,c_2)) = sum(sum(c_1,c_3),c_2),
     sum(c_1,sum(c_3,c_2)) = sum(sum(c_2,c_1),c_3),
     sum(c_1,sum(c_3,c_2)) = sum(sum(c_2,c_3),c_1),
     sum(c_1,sum(c_3,c_2)) = sum(sum(c_3,c_1),c_2),
     sum(c_1,sum(c_3,c_2)) = sum(sum(c_3,c_2),c_1),
     sum(c_2,sum(c_1,c_3)) = sum(c_1,sum(c_2,c_3)),
     sum(c_2,sum(c_1,c_3)) = sum(c_1,sum(c_3,c_2)),
     sum(c_2,sum(c_1,c_3)) = sum(c_2,sum(c_3,c_1)),
     sum(c_2,sum(c_1,c_3)) = sum(c_3,sum(c_1,c_2)),
     sum(c_2,sum(c_1,c_3)) = sum(c_3,sum(c_2,c_1)),
     sum(c_2,sum(c_1,c_3)) = sum(sum(c_1,c_2),c_3),
     sum(c_2,sum(c_1,c_3)) = sum(sum(c_1,c_3),c_2),
     sum(c_2,sum(c_1,c_3)) = sum(sum(c_2,c_1),c_3),
     sum(c_2,sum(c_1,c_3)) = sum(sum(c_2,c_3),c_1),
     sum(c_2,sum(c_1,c_3)) = sum(sum(c_3,c_1),c_2),
     sum(c_2,sum(c_1,c_3)) = sum(sum(c_3,c_2),c_1),
     sum(c_2,sum(c_3,c_1)) = sum(c_1,sum(c_2,c_3)),
     sum(c_2,sum(c_3,c_1)) = sum(c_1,sum(c_3,c_2)),
     sum(c_2,sum(c_3,c_1)) = sum(c_2,sum(c_1,c_3)),
     sum(c_2,sum(c_3,c_1)) = sum(c_3,sum(c_1,c_2)),
     sum(c_2,sum(c_3,c_1)) = sum(c_3,sum(c_2,c_1)),
     sum(c_2,sum(c_3,c_1)) = sum(sum(c_1,c_2),c_3),
     sum(c_2,sum(c_3,c_1)) = sum(sum(c_1,c_3),c_2),
     sum(c_2,sum(c_3,c_1)) = sum(sum(c_2,c_1),c_3),
     sum(c_2,sum(c_3,c_1)) = sum(sum(c_2,c_3),c_1),
     sum(c_3,sum(c_1,c_2)) = sum(c_1,sum(c_2,c_3)),
     sum(c_3,sum(c_1,c_2)) = sum(c_1,sum(c_3,c_2)),
     sum(c_3,sum(c_1,c_2)) = sum(c_2,sum(c_1,c_3)),
     sum(c_3,sum(c_1,c_2)) = sum(c_2,sum(c_3,c_1)),
     sum(c_3,sum(c_1,c_2)) = sum(c_3,sum(c_2,c_1)),
     sum(c_3,sum(c_1,c_2)) = sum(sum(c_2,c_3),c_1),
     sum(c_3,sum(c_1,c_2)) = sum(sum(c_3,c_1),c_2),
     sum(c_3,sum(c_1,c_2)) = sum(sum(c_3,c_2),c_1),
     sum(c_3,sum(c_2,c_1)) = sum(c_1,sum(c_2,c_3)),
     sum(c_3,sum(c_2,c_1)) = sum(c_1,sum(c_3,c_2)),
     sum(c_3,sum(c_2,c_1)) = sum(c_2,sum(c_1,c_3)),
     sum(c_3,sum(c_2,c_1)) = sum(c_2,sum(c_3,c_1)),
     sum(c_3,sum(c_2,c_1)) = sum(c_3,sum(c_1,c_2)),
     sum(c_3,sum(c_2,c_1)) = sum(sum(c_1,c_2),c_3),
     sum(c_3,sum(c_2,c_1)) = sum(sum(c_1,c_3),c_2),
     sum(c_3,sum(c_2,c_1)) = sum(sum(c_2,c_1),c_3),
     sum(c_3,sum(c_2,c_1)) = sum(sum(c_2,c_3),c_1),
     sum(c_3,sum(c_2,c_1)) = sum(sum(c_3,c_1),c_2),
     sum(c_3,sum(c_2,c_1)) = sum(sum(c_3,c_2),c_1),
     sum(sum(c_1,c_2),c_3) = sum(c_1,sum(c_2,c_3)),
     sum(sum(c_1,c_2),c_3) = sum(c_1,sum(c_3,c_2)),
     sum(sum(c_1,c_2),c_3) = sum(c_2,sum(c_1,c_3)),
     sum(sum(c_1,c_2),c_3) = sum(c_2,sum(c_3,c_1)),
     sum(sum(c_1,c_2),c_3) = sum(c_3,sum(c_2,c_1)),
     sum(sum(c_1,c_2),c_3) = sum(sum(c_2,c_3),c_1),
     sum(sum(c_1,c_2),c_3) = sum(sum(c_3,c_1),c_2),
     sum(sum(c_1,c_2),c_3) = sum(sum(c_3,c_2),c_1),
     sum(sum(c_2,c_1),c_3) = sum(c_1,sum(c_2,c_3)),
     sum(sum(c_2,c_1),c_3) = sum(c_1,sum(c_3,c_2)),
     sum(sum(c_2,c_1),c_3) = sum(c_2,sum(c_1,c_3)),
     sum(sum(c_2,c_1),c_3) = sum(c_2,sum(c_3,c_1)),
     sum(sum(c_2,c_1),c_3) = sum(c_3,sum(c_2,c_1)),
     sum(sum(c_2,c_1),c_3) = sum(sum(c_2,c_3),c_1),
     sum(sum(c_2,c_1),c_3) = sum(sum(c_3,c_1),c_2),
     sum(sum(c_2,c_1),c_3) = sum(sum(c_3,c_2),c_1),
     sum(sum(c_2,c_3),c_1) = sum(c_1,sum(c_2,c_3)),
     sum(sum(c_2,c_3),c_1) = sum(c_1,sum(c_3,c_2)),
     sum(sum(c_2,c_3),c_1) = sum(c_2,sum(c_1,c_3)),
     sum(sum(c_2,c_3),c_1) = sum(c_2,sum(c_3,c_1)),
     sum(sum(c_2,c_3),c_1) = sum(c_3,sum(c_1,c_2)),
     sum(sum(c_2,c_3),c_1) = sum(c_3,sum(c_2,c_1)),
     sum(sum(c_2,c_3),c_1) = sum(sum(c_1,c_2),c_3),
     sum(sum(c_2,c_3),c_1) = sum(sum(c_1,c_3),c_2),
     sum(sum(c_2,c_3),c_1) = sum(sum(c_2,c_1),c_3),
     sum(sum(c_2,c_3),c_1) = sum(sum(c_3,c_1),c_2),
     sum(sum(c_2,c_3),c_1) = sum(sum(c_3,c_2),c_1),
     sum(sum(c_3,c_1),c_2) = sum(c_1,sum(c_2,c_3)),
     sum(sum(c_3,c_1),c_2) = sum(c_1,sum(c_3,c_2)),
     sum(sum(c_3,c_1),c_2) = sum(c_2,sum(c_1,c_3)),
     sum(sum(c_3,c_1),c_2) = sum(c_2,sum(c_3,c_1)),
     sum(sum(c_3,c_1),c_2) = sum(c_3,sum(c_1,c_2)),
     sum(sum(c_3,c_1),c_2) = sum(c_3,sum(c_2,c_1)),
     sum(sum(c_3,c_1),c_2) = sum(sum(c_1,c_2),c_3),
     sum(sum(c_3,c_1),c_2) = sum(sum(c_1,c_3),c_2),
     sum(sum(c_3,c_1),c_2) = sum(sum(c_2,c_1),c_3),
     sum(sum(c_3,c_1),c_2) = sum(sum(c_2,c_3),c_1),
     sum(sum(c_3,c_2),c_1) = sum(c_1,sum(c_2,c_3)),
     sum(sum(c_3,c_2),c_1) = sum(c_1,sum(c_3,c_2)),
     sum(sum(c_3,c_2),c_1) = sum(c_2,sum(c_1,c_3)),
     sum(sum(c_3,c_2),c_1) = sum(c_2,sum(c_3,c_1)),
     sum(sum(c_3,c_2),c_1) = sum(c_3,sum(c_1,c_2)),
     sum(sum(c_3,c_2),c_1) = sum(c_3,sum(c_2,c_1)),
     sum(sum(c_3,c_2),c_1) = sum(sum(c_1,c_2),c_3),
     sum(sum(c_3,c_2),c_1) = sum(sum(c_1,c_3),c_2),
     sum(sum(c_3,c_2),c_1) = sum(sum(c_2,c_1),c_3),
     sum(sum(c_3,c_2),c_1) = sum(sum(c_2,c_3),c_1),
     sum(sum(nil,nil),sum(c_1,c_2)) = sum(c_1,c_2),
     sum(sum(nil,nil),sum(c_1,c_2)) = sum(c_2,c_1),
     sum(sum(nil,nil),sum(c_2,c_1)) = sum(c_1,c_2),
     sum(sum(nil,nil),sum(c_2,c_1)) = sum(c_2,c_1),
     sum(sum(nil,sum(c_2,nil)),c_1) = sum(c_1,c_2),
     sum(sum(nil,sum(c_2,nil)),c_1) = sum(c_2,c_1),
     sum(sum(nil,sum(nil,c_2)),c_1) = sum(c_1,c_2),
     sum(sum(nil,sum(nil,c_2)),c_1) = sum(c_2,c_1),
     sum(sum(sum(nil,nil),c_1),c_2) = sum(c_1,c_2),
     sum(sum(sum(nil,nil),c_1),c_2) = sum(c_2,c_1),
     sum(sum(sum(nil,nil),c_2),c_1) = sum(c_1,c_2),
     sum(sum(sum(nil,nil),c_2),c_1) = sum(c_2,c_1),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_1,sum(c_2,sum(c_3,c_4))) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_1,sum(c_2,sum(c_4,c_3))) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_1,sum(c_3,sum(c_4,c_2))) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_1,sum(sum(c_3,c_4),c_2)) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_1,sum(sum(c_4,c_3),c_2)) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_2,sum(c_1,sum(c_3,c_4))) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_2,sum(c_1,sum(c_4,c_3))) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_2,sum(sum(c_3,c_4),c_1)) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_3,sum(c_4,sum(c_1,c_2))) = sum(c_2,sum(sum(c_3,c_1),c_4)),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_1,sum(c_2,sum(c_3,c_4))),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_1,sum(c_2,sum(c_4,c_3))),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_1,sum(c_3,sum(c_2,c_4))),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_1,sum(c_4,sum(c_2,c_3))),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_1,sum(c_4,sum(c_3,c_2))),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_1,sum(sum(c_2,c_3),c_4)),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_1,sum(sum(c_3,c_2),c_4)),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_1,sum(sum(c_3,c_4),c_2)),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_2,sum(c_3,sum(c_1,c_4))),
     sum(c_3,sum(c_4,sum(c_2,c_1))) = sum(c_2,sum(sum(c_3,c_1),c_4)) ]
obtain 100 candidates for checking non-joinability
check by TCAP-ApproximationProve non-joinability of sum(c_1,nil) and c_1 by tcaps
Prove non-joinability of sum(nil,c_1) and c_1 by tcaps
Prove non-joinability of sum(nil,nil) and nil by tcaps
Prove non-joinability of sum(c_1,c_2) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(c_2,c_1) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(c_1,sum(nil,nil)) and c_1 by tcaps
Prove non-joinability of sum(nil,sum(c_1,nil)) and c_1 by tcaps
Prove non-joinability of sum(nil,sum(nil,c_1)) and c_1 by tcaps
Prove non-joinability of sum(sum(c_1,nil),nil) and c_1 by tcaps
Prove non-joinability of sum(sum(nil,c_1),nil) and c_1 by tcaps
Prove non-joinability of sum(sum(nil,nil),c_1) and c_1 by tcaps
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_1,c_2) by tcaps
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_2,c_1) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_1,sum(c_3,c_2)) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_1,c_3)) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_3,c_1)) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_1,c_2)) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_2,c_1)) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_2),c_3) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_3),c_2) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_1),c_3) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_3),c_1) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_1),c_2) by tcaps
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_2),c_1) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_1,sum(c_2,c_3)) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_1,c_3)) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_3,c_1)) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_1,c_2)) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_2,c_1)) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_1,c_2),c_3) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_1,c_3),c_2) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_2,c_1),c_3) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_2,c_3),c_1) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_3,c_1),c_2) by tcaps
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_3,c_2),c_1) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(c_1,sum(c_2,c_3)) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(c_1,sum(c_3,c_2)) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(c_2,sum(c_3,c_1)) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(c_3,sum(c_1,c_2)) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(c_3,sum(c_2,c_1)) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(sum(c_1,c_2),c_3) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(sum(c_1,c_3),c_2) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(sum(c_2,c_1),c_3) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(sum(c_2,c_3),c_1) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(sum(c_3,c_1),c_2) by tcaps
Prove non-joinability of sum(c_2,sum(c_1,c_3)) and sum(sum(c_3,c_2),c_1) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(c_1,sum(c_2,c_3)) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(c_1,sum(c_3,c_2)) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(c_2,sum(c_1,c_3)) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(c_3,sum(c_1,c_2)) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(c_3,sum(c_2,c_1)) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(sum(c_1,c_2),c_3) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(sum(c_1,c_3),c_2) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(sum(c_2,c_1),c_3) by tcaps
Prove non-joinability of sum(c_2,sum(c_3,c_1)) and sum(sum(c_2,c_3),c_1) by tcaps
Prove non-joinability of sum(c_3,sum(c_1,c_2)) and sum(c_1,sum(c_2,c_3)) by tcaps
Prove non-joinability of sum(c_3,sum(c_1,c_2)) and sum(c_1,sum(c_3,c_2)) by tcaps
Prove non-joinability of sum(c_3,sum(c_1,c_2)) and sum(c_2,sum(c_1,c_3)) by tcaps
Prove non-joinability of sum(c_3,sum(c_1,c_2)) and sum(c_2,sum(c_3,c_1)) by tcaps
Prove non-joinability of sum(c_3,sum(c_1,c_2)) and sum(c_3,sum(c_2,c_1)) by tcaps
Prove non-joinability of sum(c_3,sum(c_1,c_2)) and sum(sum(c_2,c_3),c_1) by tcaps
Prove non-joinability of sum(c_3,sum(c_1,c_2)) and sum(sum(c_3,c_1),c_2) by tcaps
Prove non-joinability of sum(c_3,sum(c_1,c_2)) and sum(sum(c_3,c_2),c_1) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(c_1,sum(c_2,c_3)) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(c_1,sum(c_3,c_2)) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(c_2,sum(c_1,c_3)) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(c_2,sum(c_3,c_1)) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(c_3,sum(c_1,c_2)) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(sum(c_1,c_2),c_3) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(sum(c_1,c_3),c_2) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(sum(c_2,c_1),c_3) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(sum(c_2,c_3),c_1) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(sum(c_3,c_1),c_2) by tcaps
Prove non-joinability of sum(c_3,sum(c_2,c_1)) and sum(sum(c_3,c_2),c_1) by tcaps
Prove non-joinability of sum(sum(c_1,c_2),c_3) and sum(c_1,sum(c_2,c_3)) by tcaps
Prove non-joinability of sum(sum(c_1,c_2),c_3) and sum(c_1,sum(c_3,c_2)) by tcaps
Prove non-joinability of sum(sum(c_1,c_2),c_3) and sum(c_2,sum(c_1,c_3)) by tcaps
Prove non-joinability of sum(sum(c_1,c_2),c_3) and sum(c_2,sum(c_3,c_1)) by tcaps
Prove non-joinability of sum(sum(c_1,c_2),c_3) and sum(c_3,sum(c_2,c_1)) by tcaps
Prove non-joinability of sum(sum(c_1,c_2),c_3) and sum(sum(c_2,c_3),c_1) by tcaps
 (failure)
check by Ordering(rpo), check by Tree-Automata ApproximationProve non-joinability of sum(c_1,nil) and c_1 by rpo
   [ ]
   [ ]
   [ sum(?X,?Y) -> sum(?Y,?X),
     sum(nil,?X) -> ?X,
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,nil),c_1}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,nil,sum(*,*)}
Delta0 = 
   [ c_1 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{nil},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(nil,c_1) and c_1 by rpo
   [ ]
   [ ]
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(nil,c_1),c_1}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,nil,sum(*,*)}
Delta0 = 
   [ c_1 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ c_1 -> q_0,
     c_1 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{nil},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(nil,nil) and nil by rpo
   [ ]
   [ ]
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(nil,nil),nil}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{nil,sum(*,*)}
Delta0 = 
   [ nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{nil}) -> q_0,
     nil -> q_1 ]
added rules:
   [ nil -> q_0,
     nil -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{nil},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ nil -> q_0,
     nil -> q_1,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{nil},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,c_2) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,c_2),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,sum(*,*)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_2,c_1) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_2,c_1),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,sum(*,*)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(nil,nil)) and c_1 by rpo
   [ ]
   [ ]
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(nil,nil)),c_1}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,nil,sum(*,*),sum(nil,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{nil}) -> q_{sum(nil,nil)},
     sum(q_{c_1},q_{sum(nil,nil)}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ nil -> q_{sum(nil,nil)},
     c_1 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(nil,nil)},q_{c_1}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{nil},q_{sum(nil,nil)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{sum(nil,nil)},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(nil,nil)}) -> q_0,
     sum(q_{nil},q_{nil}) -> q_{sum(nil,nil)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,nil)},q_{c_1}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(nil,sum(c_1,nil)) and c_1 by rpo
   [ ]
   [ ]
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(nil,sum(c_1,nil)),c_1}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,nil,sum(*,*),sum(c_1,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_{sum(c_1,nil)},
     sum(q_{nil},q_{sum(c_1,nil)}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ sum(q_{c_1},q_{nil}) -> q_0,
     c_1 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(c_1,nil)},
     sum(q_{sum(c_1,nil)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_{sum(c_1,nil)},
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_1 -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{nil},q_{sum(c_1,nil)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(c_1,nil)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{c_1},q_{nil}) -> q_{sum(c_1,nil)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(c_1,nil)},
     sum(q_{nil},q_{sum(c_1,nil)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(c_1,nil)},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(nil,sum(nil,c_1)) and c_1 by rpo
   [ ]
   [ ]
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(nil,sum(nil,c_1)),c_1}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,nil,sum(*,*),sum(nil,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{sum(nil,c_1)}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ c_1 -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{c_1}) -> q_0,
     c_1 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{sum(nil,c_1)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_1 -> q_0,
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{nil},q_{sum(nil,c_1)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_1)},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(c_1,nil),nil) and c_1 by rpo
   [ ]
   [ ]
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(c_1,nil),nil),c_1}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,nil,sum(*,*),sum(c_1,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_{sum(c_1,nil)},
     sum(q_{sum(c_1,nil)},q_{nil}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(c_1,nil)},
     sum(q_{nil},q_{sum(c_1,nil)}) -> q_0,
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_{sum(c_1,nil)},
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_1 -> q_0,
     c_1 -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{nil},q_{sum(c_1,nil)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(c_1,nil)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{c_1},q_{nil}) -> q_{sum(c_1,nil)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(c_1,nil)},
     sum(q_{nil},q_{sum(c_1,nil)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(c_1,nil)},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(nil,c_1),nil) and c_1 by rpo
   [ ]
   [ ]
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(nil,c_1),nil),c_1}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,nil,sum(*,*),sum(nil,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{sum(nil,c_1)},q_{nil}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{nil},q_{sum(nil,c_1)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_0,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_1)},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(nil,nil),c_1) and c_1 by rpo
   [ ]
   [ ]
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
 (failure)

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(nil,nil),c_1),c_1}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,nil,sum(*,*),sum(nil,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{nil}) -> q_{sum(nil,nil)},
     sum(q_{sum(nil,nil)},q_{c_1}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ nil -> q_{sum(nil,nil)},
     c_1 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(nil,nil)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{nil},q_{sum(nil,nil)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{sum(nil,nil)},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(nil,nil)}) -> q_0,
     sum(q_{nil},q_{nil}) -> q_{sum(nil,nil)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,nil)},q_{c_1}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,nil)),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_2,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{nil}) -> q_{sum(c_2,nil)},
     sum(q_{c_1},q_{sum(c_2,nil)}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{sum(c_2,nil)},q_{c_1}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(c_2,nil)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_{sum(c_2,nil)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{*},q_{sum(*,*)},q_{sum(c_2,nil)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_2 -> q_{sum(c_2,nil)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,nil)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(c_2,nil)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(c_2,nil)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,nil)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,nil)),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_2,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{nil}) -> q_{sum(c_2,nil)},
     sum(q_{c_1},q_{sum(c_2,nil)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_2,nil)},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{nil},q_{c_2}) -> q_{sum(c_2,nil)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_{sum(c_2,nil)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{*},q_{sum(*,*)},q_{sum(c_2,nil)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_2 -> q_{sum(c_2,nil)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,nil)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(c_2,nil)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(c_2,nil)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,nil)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(nil,c_2)),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(nil,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_2}) -> q_{sum(nil,c_2)},
     sum(q_{c_1},q_{sum(nil,c_2)}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_2 -> q_{sum(nil,c_2)},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{sum(nil,c_2)},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{nil}) -> q_{sum(nil,c_2)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(nil,c_2)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{sum(nil,c_2)},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{sum(nil,c_2)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(nil,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(nil,c_2)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_2)},q_{c_1}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(nil,c_2)),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(nil,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_2}) -> q_{sum(nil,c_2)},
     sum(q_{c_1},q_{sum(nil,c_2)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_2 -> q_{sum(nil,c_2)},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(nil,c_2)},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(nil,c_2)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(nil,c_2)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{sum(nil,c_2)},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{sum(nil,c_2)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(nil,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(nil,c_2)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_2)},q_{c_1}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_2,sum(c_1,nil)),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_1,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_{sum(c_1,nil)},
     sum(q_{c_2},q_{sum(c_1,nil)}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{nil},q_{c_1}) -> q_{sum(c_1,nil)},
     sum(q_{sum(c_1,nil)},q_{c_2}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_{sum(c_1,nil)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(c_1,nil)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(c_1,nil)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{nil}) -> q_{sum(c_1,nil)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{sum(c_1,nil)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(c_1,nil)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(c_1,nil)},q_{c_2}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_2,sum(c_1,nil)),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_1,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{nil}) -> q_{sum(c_1,nil)},
     sum(q_{c_2},q_{sum(c_1,nil)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(c_1,nil)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{sum(c_1,nil)},q_{c_2}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_{sum(c_1,nil)},
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(c_1,nil)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(c_1,nil)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{nil}) -> q_{sum(c_1,nil)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{sum(c_1,nil)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(c_1,nil)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(c_1,nil)},q_{c_2}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_2,sum(nil,c_1)),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(nil,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{c_2},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{sum(nil,c_1)},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(nil,c_1)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_1)},q_{c_2}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_2,sum(nil,c_1)),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(nil,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{c_2},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{sum(nil,c_1)},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(nil,c_1)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_1)},q_{c_2}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(nil,sum(c_1,c_2)),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_1,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{nil},q_{sum(c_1,c_2)}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ sum(q_{c_1},q_{c_2}) -> q_0,
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{sum(c_1,c_2)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(c_1,c_2)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(c_1,c_2)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(nil,sum(c_1,c_2)),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_1,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{nil},q_{sum(c_1,c_2)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ sum(q_{c_1},q_{c_2}) -> q_0,
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{sum(c_1,c_2)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(c_1,c_2)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(c_1,c_2)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(nil,sum(c_2,c_1)),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_2,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{nil},q_{sum(c_2,c_1)}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{sum(c_2,c_1)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{*},q_{sum(*,*)},q_{sum(c_2,c_1)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(c_2,c_1)}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_1)},q_{nil}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(nil,sum(c_2,c_1)),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_2,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{nil},q_{sum(c_2,c_1)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{sum(c_2,c_1)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{*},q_{sum(*,*)},q_{sum(c_2,c_1)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(c_2,c_1)}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_1)},q_{nil}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(c_1,c_2),nil),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_1,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{sum(c_1,c_2)},q_{nil}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{nil},q_{sum(c_1,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(c_1,c_2)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(c_1,c_2)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(c_1,c_2),nil),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_1,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{sum(c_1,c_2)},q_{nil}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{nil},q_{sum(c_1,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(c_1,c_2)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(c_1,c_2)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{nil}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(c_2,c_1),nil),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_2,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{sum(c_2,c_1)},q_{nil}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{nil},q_{sum(c_2,c_1)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_2 -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{*},q_{sum(*,*)},q_{sum(c_2,c_1)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(c_2,c_1)}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_1)},q_{nil}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(c_2,c_1),nil),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_2,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{sum(c_2,c_1)},q_{nil}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{nil},q_{sum(c_2,c_1)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_2 -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{*},q_{sum(*,*)},q_{sum(c_2,c_1)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{sum(c_2,c_1)}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_1)},q_{nil}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(c_2,nil),c_1),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_2,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{nil}) -> q_{sum(c_2,nil)},
     sum(q_{sum(c_2,nil)},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{nil},q_{c_2}) -> q_{sum(c_2,nil)},
     sum(q_{c_1},q_{sum(c_2,nil)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_{sum(c_2,nil)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_2 -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{*},q_{sum(*,*)},q_{sum(c_2,nil)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_2 -> q_{sum(c_2,nil)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,nil)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(c_2,nil)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(c_2,nil)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,nil)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(c_2,nil),c_1),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(c_2,nil)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{nil}) -> q_{sum(c_2,nil)},
     sum(q_{sum(c_2,nil)},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{nil},q_{c_2}) -> q_{sum(c_2,nil)},
     sum(q_{c_1},q_{sum(c_2,nil)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_{sum(c_2,nil)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_2 -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{*},q_{sum(*,*)},q_{sum(c_2,nil)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_2 -> q_{sum(c_2,nil)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,nil)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(c_2,nil)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(c_2,nil)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,nil)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(nil,c_1),c_2),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(nil,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{sum(nil,c_1)},q_{c_2}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{c_2},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(nil,c_1)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_1)},q_{c_2}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(nil,c_1),c_2),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(nil,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{sum(nil,c_1)},q_{c_2}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{c_2},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(nil,c_1)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{sum(nil,c_1)},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{nil}) -> q_{sum(nil,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{sum(nil,c_1)}) -> q_0,
     sum(q_{nil},q_{c_1}) -> q_{sum(nil,c_1)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_1)},q_{c_2}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(nil,c_2),c_1),sum(c_1,c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(nil,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_2}) -> q_{sum(nil,c_2)},
     sum(q_{sum(nil,c_2)},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_2 -> q_{sum(nil,c_2)},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(nil,c_2)},
     sum(q_{c_1},q_{sum(nil,c_2)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(nil,c_2)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{sum(nil,c_2)},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{sum(nil,c_2)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(nil,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(nil,c_2)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_2)},q_{c_1}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(sum(nil,c_2),c_1),sum(c_2,c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,nil,sum(*,*),sum(nil,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     nil -> q_{nil},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{nil},q_{c_2}) -> q_{sum(nil,c_2)},
     sum(q_{sum(nil,c_2)},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_2 -> q_{sum(nil,c_2)},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(nil,c_2)},
     sum(q_{c_1},q_{sum(nil,c_2)}) -> q_0,
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{nil},q_{sum(nil,c_2)},q_{*},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{sum(nil,c_2)},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_{nil},
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{sum(nil,c_2)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_1,
     sum(q_{c_2},q_{nil}) -> q_{sum(nil,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{nil},q_{c_2}) -> q_{sum(nil,c_2)},
     sum(q_{nil},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(nil,c_2)},q_{c_1}) -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{nil}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_1,sum(c_3,c_2)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_3),sum(c_3,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_1,
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     c_3 -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(c_3,c_2)},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_1,c_3)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(c_2,sum(c_1,c_3))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_1,c_3),sum(c_2,c_3)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_1,c_3)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{sum(c_1,c_3)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_1,c_3)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{sum(c_1,c_3)},q_{c_2}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_3 -> q_0,
     c_3 -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{sum(c_1,c_3)},q_{*},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_1,c_3)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(c_1,c_3)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_1,c_3)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(c_1,c_3)},q_{c_2}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_3,c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(c_2,sum(c_3,c_1))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_3),sum(c_3,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_3,c_1)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{sum(c_3,c_1)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{sum(c_3,c_1)},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_3,c_1)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_3 -> q_0,
     c_3 -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(c_3,c_1)},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_3,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(c_3,c_1)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_3,c_1)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_1)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_1,c_2)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(c_3,sum(c_1,c_2))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_1,c_2),sum(c_2,c_3)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_3},q_{sum(c_1,c_2)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{sum(c_1,c_2)},q_{c_3}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{sum(c_1,c_2)},q_{*},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(c_1,c_2)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{c_3}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_2,c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(c_3,sum(c_2,c_1))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_1),sum(c_2,c_3)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_3},q_{sum(c_2,c_1)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{sum(c_2,c_1)},q_{c_3}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(*,*)},q_{sum(c_2,c_1)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(c_2,c_1)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_1)},q_{c_3}) -> q_1,
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_2),c_3) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(sum(c_1,c_2),c_3)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_1,c_2),sum(c_2,c_3)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{c_3}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(c_1,c_2)}) -> q_1,
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     c_2 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_2 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{sum(c_1,c_2)},q_{*},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(c_1,c_2)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{c_3}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_3),c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(sum(c_1,c_3),c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_1,c_3),sum(c_2,c_3)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_1,c_3)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{sum(c_1,c_3)},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_1,c_3)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(c_1,c_3)}) -> q_1,
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_3 -> q_0,
     c_3 -> q_1,
     c_2 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_2 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{sum(c_1,c_3)},q_{*},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_1,c_3)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(c_1,c_3)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_1,c_3)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(c_1,c_3)},q_{c_2}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_1),c_3) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(sum(c_2,c_1),c_3)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_1),sum(c_2,c_3)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{sum(c_2,c_1)},q_{c_3}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(c_2,c_1)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_2 -> q_1,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_3 -> q_0,
     c_1 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(*,*)},q_{sum(c_2,c_1)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(c_2,c_1)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_1)},q_{c_3}) -> q_1,
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_3),c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(sum(c_2,c_3),c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_3)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1 ]
added rules:
   [ c_2 -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_3 -> q_0,
     c_3 -> q_1,
     c_1 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_1,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_1 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_1),c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(sum(c_3,c_1),c_2)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_3),sum(c_3,c_1)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_3,c_1)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{sum(c_3,c_1)},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_3,c_1)},
     sum(q_{c_2},q_{sum(c_3,c_1)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_3 -> q_1,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_3 -> q_0,
     c_1 -> q_1,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_1,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(c_3,c_1)},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_3,c_1)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(c_3,c_1)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_3,c_1)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_1)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_2),c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_2,c_3)),sum(sum(c_3,c_2),c_1)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_3),sum(c_3,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_3 -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     c_1 -> q_1,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_1,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(c_3,c_2)},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_1,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_0,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_0 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_1,sum(c_2,c_3)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_3,c_2)),sum(c_1,sum(c_2,c_3))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_3),sum(c_3,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     c_3 -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(c_3,c_2)},q_{sum(*,*)},q_{sum(c_2,c_3)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(c_2,c_3)}) -> q_1,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_2,c_3)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_2,c_3)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_3)},q_{c_1}) -> q_1 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_1,c_3)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_3,c_2)),sum(c_2,sum(c_1,c_3))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_1,c_3),sum(c_3,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_1,c_3)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_2},q_{sum(c_1,c_3)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_1,c_3)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(c_1,c_3)},q_{c_2}) -> q_1,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_3 -> q_0,
     c_3 -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{sum(c_1,c_3)},q_{*},q_{sum(c_3,c_2)},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_1,c_3)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_2},q_{sum(c_1,c_3)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_1,c_3)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(c_1,c_3)},q_{c_2}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_3,c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_3,c_2)),sum(c_2,sum(c_3,c_1))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_3,c_1),sum(c_3,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_3,c_1)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_2},q_{sum(c_3,c_1)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(c_3,c_1)},q_{c_2}) -> q_1,
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_3,c_1)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_3 -> q_0,
     c_3 -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_2 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(c_3,c_1)},q_{sum(c_3,c_2)},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_3}) -> q_{sum(c_3,c_1)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_2},q_{sum(c_3,c_1)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{c_1}) -> q_{sum(c_3,c_1)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_1)},q_{c_2}) -> q_1,
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{c_3}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_1,c_2)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_3,c_2)),sum(c_3,sum(c_1,c_2))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_1,c_2),sum(c_3,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_3},q_{sum(c_1,c_2)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{sum(c_1,c_2)},q_{c_3}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{sum(c_1,c_2)},q_{*},q_{sum(c_3,c_2)},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{sum(c_1,c_2)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{c_3}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_2,c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_3,c_2)),sum(c_3,sum(c_2,c_1))}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_2,c_1),sum(c_3,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_3},q_{sum(c_2,c_1)}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{sum(c_2,c_1)},q_{c_3}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_1 -> q_1,
     c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{*},q_{sum(c_3,c_2)},q_{sum(*,*)},q_{sum(c_2,c_1)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_2,c_1)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_2,c_1)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(c_2,c_1)}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_2,c_1)},q_{c_3}) -> q_1 ]
failed (non-empty intersection)
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_1,c_2),c_3) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]

*** degrowing completion ***
Terms: {sum(c_1,sum(c_3,c_2)),sum(sum(c_1,c_2),c_3)}
Rules:
   [ sum(nil,?X) -> ?X,
     sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?x_1,?x_2)) ]
{c_1,c_2,c_3,sum(*,*),sum(c_1,c_2),sum(c_3,c_2)}
Delta0 = 
   [ c_1 -> q_{*},
     c_2 -> q_{*},
     c_3 -> q_{*},
     nil -> q_{*},
     sum(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     c_3 -> q_{c_3},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{c_3}) -> q_1 ]
added rules:
   [ c_1 -> q_{sum(*,*)},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_{sum(*,*)},
     nil -> q_{sum(*,*)},
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{sum(c_1,c_2)}) -> q_1,
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
added rules:
   [ c_2 -> q_0,
     c_2 -> q_1,
     c_3 -> q_0,
     c_2 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     c_2 -> q_1,
     c_3 -> q_1,
     nil -> q_1,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     c_1 -> q_0,
     nil -> q_0,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(c_1,0),(c_2,0),(c_3,0),(nil,0),(sum,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{c_3},q_{sum(c_1,c_2)},q_{*},q_{sum(c_3,c_2)},q_{sum(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{sum(*,*)},
     c_2 -> q_0,
     c_2 -> q_1,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{sum(*,*)},
     c_3 -> q_0,
     c_3 -> q_1,
     c_3 -> q_{c_3},
     c_3 -> q_{*},
     c_3 -> q_{sum(*,*)},
     nil -> q_0,
     nil -> q_1,
     nil -> q_{*},
     nil -> q_{sum(*,*)},
     sum(q_{c_1},q_{c_2}) -> q_{sum(c_1,c_2)},
     sum(q_{c_1},q_{sum(c_3,c_2)}) -> q_0,
     sum(q_{c_1},q_{sum(*,*)}) -> q_1,
     sum(q_{c_2},q_{c_1}) -> q_{sum(c_1,c_2)},
     sum(q_{c_2},q_{c_3}) -> q_{sum(c_3,c_2)},
     sum(q_{c_2},q_{sum(*,*)}) -> q_0,
     sum(q_{c_2},q_{sum(*,*)}) -> q_1,
     sum(q_{c_3},q_{c_2}) -> q_{sum(c_3,c_2)},
     sum(q_{c_3},q_{sum(c_1,c_2)}) -> q_1,
     sum(q_{c_3},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(c_1,c_2)},q_{c_3}) -> q_1,
     sum(q_{*},q_{*}) -> q_0,
     sum(q_{*},q_{*}) -> q_1,
     sum(q_{*},q_{*}) -> q_{*},
     sum(q_{*},q_{*}) -> q_{sum(*,*)},
     sum(q_{*},q_{sum(*,*)}) -> q_0,
     sum(q_{*},q_{sum(*,*)}) -> q_1,
     sum(q_{*},q_{sum(*,*)}) -> q_{sum(*,*)},
     sum(q_{sum(c_3,c_2)},q_{c_1}) -> q_0,
     sum(q_{sum(*,*)},q_{c_1}) -> q_1,
     sum(q_{sum(*,*)},q_{c_2}) -> q_0,
     sum(q_{sum(*,*)},q_{c_2}) -> q_1,
     sum(q_{sum(*,*)},q_{c_3}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_0,
     sum(q_{sum(*,*)},q_{*}) -> q_1,
     sum(q_{sum(*,*)},q_{*}) -> q_{sum(*,*)},
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_0,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_1,
     sum(q_{sum(*,*)},q_{sum(*,*)}) -> q_{sum(*,*)} ]
failed (non-empty intersection)
 (failure)
check by Interpretation(mod2)Prove non-joinability of sum(c_1,nil) and c_1 by mod2
Prove non-joinability of sum(nil,c_1) and c_1 by mod2
Prove non-joinability of sum(nil,nil) and nil by mod2
Prove non-joinability of sum(c_1,c_2) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(c_2,c_1) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(c_1,sum(nil,nil)) and c_1 by mod2
Prove non-joinability of sum(nil,sum(c_1,nil)) and c_1 by mod2
Prove non-joinability of sum(nil,sum(nil,c_1)) and c_1 by mod2
Prove non-joinability of sum(sum(c_1,nil),nil) and c_1 by mod2
Prove non-joinability of sum(sum(nil,c_1),nil) and c_1 by mod2
Prove non-joinability of sum(sum(nil,nil),c_1) and c_1 by mod2
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_1,c_2) by mod2
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_2,c_1) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_1,sum(c_3,c_2)) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_1,c_3)) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_3,c_1)) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_1,c_2)) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_2,c_1)) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_2),c_3) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_3),c_2) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_1),c_3) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_3),c_1) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_1),c_2) by mod2
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_2),c_1) by mod2
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_1,sum(c_2,c_3)) by mod2
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_1,c_3)) by mod2
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_3,c_1)) by mod2
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_1,c_2)) by mod2
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_2,c_1)) by mod2
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_1,c_2),c_3) by mod2
 (failure)
check by Descendants-Approximation, check by Ordering(poly)Prove non-joinability of sum(c_1,nil) and c_1 by approx
tset1: {c_1}
caps1: {}
tset0: {sum(c_1,nil),sum(nil,c_1)}
caps0: {c_1}
Prove non-joinability of sum(c_1,nil) and c_1 by poly
Prove non-joinability of sum(nil,c_1) and c_1 by approx
tset1: {c_1}
caps1: {}
tset0: {c_1,sum(c_1,nil),sum(nil,c_1)}
caps0: {}
Prove non-joinability of sum(nil,c_1) and c_1 by poly
Prove non-joinability of sum(nil,nil) and nil by approx
tset1: {nil}
caps1: {}
tset0: {nil,sum(nil,nil)}
caps0: {}
Prove non-joinability of sum(nil,nil) and nil by poly
Prove non-joinability of sum(c_1,c_2) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,c_2),sum(c_2,c_1)}
caps0: {}
Prove non-joinability of sum(c_1,c_2) and sum(c_2,c_1) by poly
Prove non-joinability of sum(c_2,c_1) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,c_2),sum(c_2,c_1)}
caps0: {}
Prove non-joinability of sum(c_2,c_1) and sum(c_1,c_2) by poly
Prove non-joinability of sum(c_1,sum(nil,nil)) and c_1 by approx
tset1: {c_1}
caps1: {}
tset0: {sum(c_1,nil),sum(c_1,sum(nil,nil)),sum(sum(nil,nil),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_1,sum(nil,nil)) and c_1 by poly
Prove non-joinability of sum(nil,sum(c_1,nil)) and c_1 by approx
tset1: {c_1}
caps1: {}
tset0: {sum(c_1,nil),sum(nil,sum(c_1,nil)),sum(nil,sum(nil,c_1)),sum(sum(c_1,nil),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(nil,sum(c_1,nil)) and c_1 by poly
Prove non-joinability of sum(nil,sum(nil,c_1)) and c_1 by approx
tset1: {c_1}
caps1: {}
tset0: {sum(nil,c_1),sum(nil,sum(c_1,nil)),sum(nil,sum(nil,c_1)),sum(sum(nil,c_1),nil)}
caps0: {?x_1,?x_2,c_1}
Prove non-joinability of sum(nil,sum(nil,c_1)) and c_1 by poly
Prove non-joinability of sum(sum(c_1,nil),nil) and c_1 by approx
tset1: {c_1}
caps1: {}
tset0: {sum(c_1,sum(nil,nil)),sum(nil,sum(c_1,nil)),sum(sum(c_1,nil),nil),sum(sum(nil,c_1),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(c_1,nil),nil) and c_1 by poly
Prove non-joinability of sum(sum(nil,c_1),nil) and c_1 by approx
tset1: {c_1}
caps1: {}
tset0: {sum(c_1,nil),sum(nil,sum(c_1,nil)),sum(nil,sum(nil,c_1)),sum(sum(c_1,nil),nil),sum(sum(nil,c_1),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(nil,c_1),nil) and c_1 by poly
Prove non-joinability of sum(sum(nil,nil),c_1) and c_1 by approx
tset1: {c_1}
caps1: {}
tset0: {sum(c_1,sum(nil,nil)),sum(nil,c_1),sum(nil,sum(nil,c_1)),sum(sum(nil,nil),c_1)}
caps0: {?x_1,?x_2,c_1}
Prove non-joinability of sum(sum(nil,nil),c_1) and c_1 by poly
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,sum(c_2,nil)),sum(c_1,sum(nil,c_2)),sum(sum(c_2,nil),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_1,c_2) by poly
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,sum(c_2,nil)),sum(c_1,sum(nil,c_2)),sum(sum(c_2,nil),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_1,sum(c_2,nil)) and sum(c_2,c_1) by poly
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,c_2),sum(c_1,sum(c_2,nil)),sum(c_1,sum(nil,c_2)),sum(sum(nil,c_2),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_1,c_2) by poly
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,c_2),sum(c_1,sum(c_2,nil)),sum(c_1,sum(nil,c_2)),sum(sum(nil,c_2),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_1,sum(nil,c_2)) and sum(c_2,c_1) by poly
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_2,sum(c_1,nil)),sum(c_2,sum(nil,c_1)),sum(sum(c_1,nil),c_2)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_1,c_2) by poly
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_2,sum(c_1,nil)),sum(c_2,sum(nil,c_1)),sum(sum(c_1,nil),c_2)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_2,sum(c_1,nil)) and sum(c_2,c_1) by poly
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_2,c_1),sum(c_2,sum(c_1,nil)),sum(c_2,sum(nil,c_1)),sum(sum(nil,c_1),c_2)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_1,c_2) by poly
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_2,c_1),sum(c_2,sum(c_1,nil)),sum(c_2,sum(nil,c_1)),sum(sum(nil,c_1),c_2)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(c_2,sum(nil,c_1)) and sum(c_2,c_1) by poly
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,c_2),sum(nil,sum(c_1,c_2)),sum(nil,sum(c_2,c_1)),sum(sum(c_1,c_2),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_1,c_2) by poly
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,c_2),sum(nil,sum(c_1,c_2)),sum(nil,sum(c_2,c_1)),sum(sum(c_1,c_2),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(nil,sum(c_1,c_2)) and sum(c_2,c_1) by poly
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_2,c_1),sum(nil,sum(c_1,c_2)),sum(nil,sum(c_2,c_1)),sum(sum(c_2,c_1),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_1,c_2) by poly
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_2,c_1),sum(nil,sum(c_1,c_2)),sum(nil,sum(c_2,c_1)),sum(sum(c_2,c_1),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(nil,sum(c_2,c_1)) and sum(c_2,c_1) by poly
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,sum(c_2,nil)),sum(nil,sum(c_1,c_2)),sum(sum(c_1,c_2),nil),sum(sum(c_2,c_1),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_1,c_2) by poly
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,sum(c_2,nil)),sum(nil,sum(c_1,c_2)),sum(sum(c_1,c_2),nil),sum(sum(c_2,c_1),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(c_1,c_2),nil) and sum(c_2,c_1) by poly
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_2,sum(c_1,nil)),sum(nil,sum(c_2,c_1)),sum(sum(c_1,c_2),nil),sum(sum(c_2,c_1),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_1,c_2) by poly
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_2,sum(c_1,nil)),sum(nil,sum(c_2,c_1)),sum(sum(c_1,c_2),nil),sum(sum(c_2,c_1),nil)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(c_2,c_1),nil) and sum(c_2,c_1) by poly
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,sum(c_2,nil)),sum(c_2,sum(nil,c_1)),sum(sum(c_2,nil),c_1),sum(sum(nil,c_2),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_1,c_2) by poly
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,sum(c_2,nil)),sum(c_2,sum(nil,c_1)),sum(sum(c_2,nil),c_1),sum(sum(nil,c_2),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(c_2,nil),c_1) and sum(c_2,c_1) by poly
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,c_2),sum(c_2,sum(nil,c_1)),sum(nil,sum(c_1,c_2)),sum(sum(c_1,nil),c_2),sum(sum(nil,c_1),c_2)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_1,c_2) by poly
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,c_2),sum(c_2,sum(nil,c_1)),sum(nil,sum(c_1,c_2)),sum(sum(c_1,nil),c_2),sum(sum(nil,c_1),c_2)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(nil,c_1),c_2) and sum(c_2,c_1) by poly
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_1,c_2) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,sum(nil,c_2)),sum(c_2,c_1),sum(nil,sum(c_2,c_1)),sum(sum(c_2,nil),c_1),sum(sum(nil,c_2),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_1,c_2) by poly
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_2,c_1) by approx
tset1: {sum(c_1,c_2),sum(c_2,c_1)}
caps1: {}
tset0: {sum(c_1,sum(nil,c_2)),sum(c_2,c_1),sum(nil,sum(c_2,c_1)),sum(sum(c_2,nil),c_1),sum(sum(nil,c_2),c_1)}
caps0: {?x_1,?x_2}
Prove non-joinability of sum(sum(nil,c_2),c_1) and sum(c_2,c_1) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_1,sum(c_3,c_2)) by approx
tset1: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_3,c_2),c_1)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_1,sum(c_3,c_2)) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_1,c_3)) by approx
tset1: {sum(c_2,sum(c_1,c_3)),sum(c_2,sum(c_3,c_1)),sum(sum(c_1,c_3),c_2)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_1,c_3)) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_3,c_1)) by approx
tset1: {sum(c_2,sum(c_1,c_3)),sum(c_2,sum(c_3,c_1)),sum(sum(c_3,c_1),c_2)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_2,sum(c_3,c_1)) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_1,c_2)) by approx
tset1: {sum(c_3,sum(c_1,c_2)),sum(c_3,sum(c_2,c_1)),sum(sum(c_1,c_2),c_3)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_1,c_2)) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_2,c_1)) by approx
tset1: {sum(c_3,sum(c_1,c_2)),sum(c_3,sum(c_2,c_1)),sum(sum(c_2,c_1),c_3)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(c_3,sum(c_2,c_1)) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_2),c_3) by approx
tset1: {sum(c_1,sum(c_2,c_3)),sum(c_3,sum(c_1,c_2)),sum(sum(c_1,c_2),c_3),sum(sum(c_2,c_1),c_3)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_2),c_3) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_3),c_2) by approx
tset1: {sum(c_1,sum(c_3,c_2)),sum(c_2,sum(c_1,c_3)),sum(sum(c_1,c_3),c_2),sum(sum(c_3,c_1),c_2)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_1,c_3),c_2) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_1),c_3) by approx
tset1: {sum(c_2,sum(c_1,c_3)),sum(c_3,sum(c_2,c_1)),sum(sum(c_1,c_2),c_3),sum(sum(c_2,c_1),c_3)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_1),c_3) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_3),c_1) by approx
tset1: {sum(c_1,sum(c_2,c_3)),sum(c_2,sum(c_3,c_1)),sum(sum(c_2,c_3),c_1),sum(sum(c_3,c_2),c_1)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_2,c_3),c_1) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_1),c_2) by approx
tset1: {sum(c_2,sum(c_3,c_1)),sum(c_3,sum(c_1,c_2)),sum(sum(c_1,c_3),c_2),sum(sum(c_3,c_1),c_2)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_1),c_2) by poly
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_2),c_1) by approx
tset1: {sum(c_1,sum(c_3,c_2)),sum(c_3,sum(c_2,c_1)),sum(sum(c_2,c_3),c_1),sum(sum(c_3,c_2),c_1)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_2,c_3)) and sum(sum(c_3,c_2),c_1) by poly
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_1,sum(c_2,c_3)) by approx
tset1: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_2,c_3),c_1)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_3,c_2),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_1,sum(c_2,c_3)) by poly
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_1,c_3)) by approx
tset1: {sum(c_2,sum(c_1,c_3)),sum(c_2,sum(c_3,c_1)),sum(sum(c_1,c_3),c_2)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_3,c_2),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_1,c_3)) by poly
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_3,c_1)) by approx
tset1: {sum(c_2,sum(c_1,c_3)),sum(c_2,sum(c_3,c_1)),sum(sum(c_3,c_1),c_2)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_3,c_2),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_2,sum(c_3,c_1)) by poly
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_1,c_2)) by approx
tset1: {sum(c_3,sum(c_1,c_2)),sum(c_3,sum(c_2,c_1)),sum(sum(c_1,c_2),c_3)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_3,c_2),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_1,c_2)) by poly
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_2,c_1)) by approx
tset1: {sum(c_3,sum(c_1,c_2)),sum(c_3,sum(c_2,c_1)),sum(sum(c_2,c_1),c_3)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_3,c_2),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(c_3,sum(c_2,c_1)) by poly
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_1,c_2),c_3) by approx
tset1: {sum(c_1,sum(c_2,c_3)),sum(c_3,sum(c_1,c_2)),sum(sum(c_1,c_2),c_3),sum(sum(c_2,c_1),c_3)}
caps1: {?x_2}
tset0: {sum(c_1,sum(c_2,c_3)),sum(c_1,sum(c_3,c_2)),sum(sum(c_3,c_2),c_1)}
caps0: {?x_2}
Prove non-joinability of sum(c_1,sum(c_3,c_2)) and sum(sum(c_1,c_2),c_3) by poly
 (failure)
unknown Non-Confluence
Check relative termination:
   [ sum(nil,?X) -> ?X ]
   [ sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
Polynomial Interpretation:
  nil:= (4)
  sum:= (2)+(2)*x1+(1)*x1*x2+(2)*x2
relatively terminating
unknown Huet (modulo AC)
check by Reduction-Preserving Completion...
STEP: 1 (parallel)
S:
   [ sum(nil,?X) -> ?X ]
P:
   [ sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
S: terminating
CP(S,S):
PCP_in(symP,S):
CP(S,symP):
<sum(?X,?Z_1), sum(nil,sum(?X,?Z_1))> --> <sum(?X,?Z_1), sum(?X,?Z_1)> => yes
<?X, sum(?X,nil)> --> <?X, sum(?X,nil)> => no
<sum(?Y_1,?Z_1), sum(sum(nil,?Y_1),?Z_1)> --> <sum(?Y_1,?Z_1), sum(?Y_1,?Z_1)> => yes
<sum(?X_1,?X), sum(sum(?X_1,nil),?X)> --> <sum(?X_1,?X), sum(sum(?X_1,nil),?X)> => no
check joinability condition:
check modulo reachablity from ?X to sum(?X,nil): maybe not reachable
check modulo reachablity from sum(?X_1,?X) to sum(sum(?X_1,nil),?X): maybe not reachable
failed
failure(Step 1)
   [ sum(?X,nil) -> ?X ]
Added S-Rules:
   [ sum(?X,nil) -> ?X ]
Added P-Rules:
   [ ]
STEP: 2 (linear)
S:
   [ sum(nil,?X) -> ?X ]
P:
   [ sum(?X,?Y) -> sum(?Y,?X),
     sum(sum(?X,?Y),?Z) -> sum(?X,sum(?Y,?Z)) ]
S: terminating
CP(S,S):
CP_in(symP,S):
CP(S,symP):
<sum(?X,?Z_1), sum(nil,sum(?X,?Z_1))> --> <sum(?X,?Z_1), sum(?X,?Z_1)> => yes
<?X, sum(?X,nil)> --> <?X, sum(?X,nil)> => no
<sum(?Y_1,?Z_1), sum(sum(nil,?Y_1),?Z_1)> --> <sum(?Y_1,?Z_1), sum(?Y_1,?Z_1)> => yes
<sum(?X_1,?X), sum(sum(?X_1,nil),?X)> --> <sum(?X_1,?X), sum(sum(?X_1,nil),?X)> => no
check joinability condition:
check modulo reachablity from ?X to sum(?X,nil): maybe not reachable
check modulo reachablity from sum(?X_1,?X) to sum(sum(?X_1,nil),?X): maybe not reachable
failed
failure(Step 2)
   [ sum(?X,nil) -> ?X ]
Added S-Rules:
   [ sum(?X,nil) -> ?X ]
Added P-Rules:
   [ ]
STEP: