Rewrite Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
Apply Direct Methods...
Inner CPs:
   [ xpls(?X,?Z_4) = xpls(?X,xpls(0,?Z_4)),
     xpls(s(xpls(?X_1,?Y_1)),?Z_4) = xpls(?X_1,xpls(s(?Y_1),?Z_4)),
     xpls(?Y_2,?Z_4) = xpls(0,xpls(?Y_2,?Z_4)),
     xpls(s(xpls(?X_3,?Y_3)),?Z_4) = xpls(s(?X_3),xpls(?Y_3,?Z_4)),
     xpls(xpls(?Y_5,?X_5),?Z_4) = xpls(?X_5,xpls(?Y_5,?Z_4)),
     xpls(xpls(?X,xpls(?Y,?Z)),?Z_1) = xpls(xpls(?X,?Y),xpls(?Z,?Z_1)) ]
Outer CPs:
   [ 0 = 0,
     s(?X_3) = s(xpls(?X_3,0)),
     xpls(?X_4,?Y_4) = xpls(?X_4,xpls(?Y_4,0)),
     ?X = xpls(0,?X),
     s(xpls(0,?Y_1)) = s(?Y_1),
     s(xpls(s(?X_3),?Y_1)) = s(xpls(?X_3,s(?Y_1))),
     s(xpls(xpls(?X_4,?Y_4),?Y_1)) = xpls(?X_4,xpls(?Y_4,s(?Y_1))),
     s(xpls(?X_1,?Y_1)) = xpls(s(?Y_1),?X_1),
     ?Y_2 = xpls(?Y_2,0),
     s(xpls(?X_3,?Y_3)) = xpls(?Y_3,s(?X_3)),
     xpls(?X_4,xpls(?Y_4,?Z_4)) = xpls(?Z_4,xpls(?X_4,?Y_4)) ]
not Overlay, check Termination...
unknown/not Terminating
unknown Knuth & Bendix
Linear
unknown Development Closed
unknown Strongly Closed
unknown Weakly-Non-Overlapping & Non-Collapsing & Shallow
unknown Upside-Parallel-Closed/Outside-Closed
(inner) Parallel CPs: (not computed)
unknown Toyama (Parallel CPs)
Simultaneous CPs:
   [ 0 = 0,
     s(xpls(?X_3,0)) = s(?X_3),
     xpls(?X_4,xpls(?Y_4,0)) = xpls(?X_4,?Y_4),
     xpls(0,?X) = ?X,
     xpls(?X,xpls(0,?Z_5)) = xpls(?X,?Z_5),
     s(?Y) = s(xpls(0,?Y)),
     s(xpls(?X_3,s(?Y))) = s(xpls(s(?X_3),?Y)),
     xpls(?X_4,xpls(?Y_4,s(?Y))) = s(xpls(xpls(?X_4,?Y_4),?Y)),
     xpls(s(?Y),?X) = s(xpls(?X,?Y)),
     xpls(?X,xpls(s(?Y),?Z_5)) = xpls(s(xpls(?X,?Y)),?Z_5),
     s(xpls(0,?Y_2)) = s(?Y_2),
     xpls(?Y,0) = ?Y,
     xpls(0,xpls(?Y,?Z_5)) = xpls(?Y,?Z_5),
     s(?X) = s(xpls(?X,0)),
     s(xpls(s(?X),?Y_2)) = s(xpls(?X,s(?Y_2))),
     xpls(?Y,s(?X)) = s(xpls(?X,?Y)),
     xpls(s(?X),xpls(?Y,?Z_5)) = xpls(s(xpls(?X,?Y)),?Z_5),
     xpls(?X_1,xpls(?Y_1,?Y)) = xpls(xpls(?X_1,?Y_1),xpls(?Y,0)),
     ?X = xpls(?X,xpls(0,0)),
     s(xpls(?X,?Y_3)) = xpls(?X,xpls(s(?Y_3),0)),
     ?Y = xpls(0,xpls(?Y,0)),
     s(xpls(?X_5,?Y)) = xpls(s(?X_5),xpls(?Y,0)),
     xpls(?Y,?X) = xpls(?X,xpls(?Y,0)),
     s(xpls(xpls(?X_3,xpls(?Y_3,?Y)),?Y_2)) = xpls(xpls(?X_3,?Y_3),xpls(?Y,s(?Y_2))),
     s(xpls(?X,?Y_2)) = xpls(?X,xpls(0,s(?Y_2))),
     s(xpls(s(xpls(?X,?Y_5)),?Y_2)) = xpls(?X,xpls(s(?Y_5),s(?Y_2))),
     s(xpls(?Y,?Y_2)) = xpls(0,xpls(?Y,s(?Y_2))),
     s(xpls(s(xpls(?X_7,?Y)),?Y_2)) = xpls(s(?X_7),xpls(?Y,s(?Y_2))),
     s(xpls(xpls(?Y,?X),?Y_2)) = xpls(?X,xpls(?Y,s(?Y_2))),
     xpls(?Z,xpls(?X_1,xpls(?Y_1,?Y))) = xpls(xpls(?X_1,?Y_1),xpls(?Y,?Z)),
     xpls(?Z,?X) = xpls(?X,xpls(0,?Z)),
     xpls(?Z,s(xpls(?X,?Y_3))) = xpls(?X,xpls(s(?Y_3),?Z)),
     xpls(?Z,?Y) = xpls(0,xpls(?Y,?Z)),
     xpls(?Z,s(xpls(?X_5,?Y))) = xpls(s(?X_5),xpls(?Y,?Z)),
     xpls(?Z,xpls(?Y,?X)) = xpls(?X,xpls(?Y,?Z)),
     xpls(?X,?Y) = xpls(?X,xpls(?Y,0)),
     s(xpls(xpls(?X,?Y),?Y_2)) = xpls(?X,xpls(?Y,s(?Y_2))),
     xpls(?Z,xpls(?X,?Y)) = xpls(?X,xpls(?Y,?Z)),
     xpls(xpls(?X_1,xpls(?Y_1,?Y)),?Z) = xpls(xpls(?X_1,?Y_1),xpls(?Y,?Z)),
     xpls(?X,?Z) = xpls(?X,xpls(0,?Z)),
     xpls(s(xpls(?X,?Y_3)),?Z) = xpls(?X,xpls(s(?Y_3),?Z)),
     xpls(?Y,?Z) = xpls(0,xpls(?Y,?Z)),
     xpls(s(xpls(?X_5,?Y)),?Z) = xpls(s(?X_5),xpls(?Y,?Z)),
     xpls(xpls(?Y,?X),?Z) = xpls(?X,xpls(?Y,?Z)),
     xpls(xpls(?X_2,xpls(?Y_2,?Y)),xpls(?Z,?Z_1)) = xpls(xpls(xpls(?X_2,?Y_2),xpls(?Y,?Z)),?Z_1),
     xpls(?X,xpls(?Z,?Z_1)) = xpls(xpls(?X,xpls(0,?Z)),?Z_1),
     xpls(s(xpls(?X,?Y_4)),xpls(?Z,?Z_1)) = xpls(xpls(?X,xpls(s(?Y_4),?Z)),?Z_1),
     xpls(?Y,xpls(?Z,?Z_1)) = xpls(xpls(0,xpls(?Y,?Z)),?Z_1),
     xpls(s(xpls(?X_6,?Y)),xpls(?Z,?Z_1)) = xpls(xpls(s(?X_6),xpls(?Y,?Z)),?Z_1),
     xpls(xpls(?Y,?X),xpls(?Z,?Z_1)) = xpls(xpls(?X,xpls(?Y,?Z)),?Z_1),
     xpls(xpls(?X,?Y),xpls(?Z,?Z_1)) = xpls(xpls(?X,xpls(?Y,?Z)),?Z_1),
     ?X = xpls(0,?X),
     s(xpls(?X,?Y_2)) = xpls(s(?Y_2),?X),
     ?Y = xpls(?Y,0),
     s(xpls(?X_4,?Y)) = xpls(?Y,s(?X_4)),
     xpls(?X_5,xpls(?Y_5,?Y)) = xpls(?Y,xpls(?X_5,?Y_5)),
     xpls(?X,xpls(?Y,?Z_6)) = xpls(xpls(?Y,?X),?Z_6) ]
unknown Okui (Simultaneous CPs)
unknown Strongly Depth-Preserving & Root-E-Closed/Non-E-Overlapping
unknown Strongly Weight-Preserving & Root-E-Closed/Non-E-Overlapping
check Locally Decreasing Diagrams by Rule Labelling...
Critical Pair <xpls(?X,?Z_4), xpls(?X,xpls(0,?Z_4))> by Rules <0, 4> preceded by [(xpls,1)]
 joinable by a reduction of rules <[], [([(xpls,2)],2)]>
Critical Pair <xpls(s(xpls(?X_1,?Y_1)),?Z_4), xpls(?X_1,xpls(s(?Y_1),?Z_4))> by Rules <1, 4> preceded by [(xpls,1)]
 joinable by a reduction of rules <[([],3),([(s,1)],4)], [([(xpls,2)],3),([],1)]>
Critical Pair <xpls(?Y_2,?Z_4), xpls(0,xpls(?Y_2,?Z_4))> by Rules <2, 4> preceded by [(xpls,1)]
 joinable by a reduction of rules <[], [([],2)]>
Critical Pair <xpls(s(xpls(?X_3,?Y_3)),?Z_4), xpls(s(?X_3),xpls(?Y_3,?Z_4))> by Rules <3, 4> preceded by [(xpls,1)]
 joinable by a reduction of rules <[([],3),([(s,1)],4)], [([],3)]>
Critical Pair <xpls(xpls(?Y_5,?X_5),?Z_4), xpls(?X_5,xpls(?Y_5,?Z_4))> by Rules <5, 4> preceded by [(xpls,1)]
 joinable by a reduction of rules <[([(xpls,1)],5),([],4)], []>
 joinable by a reduction of rules <[([],4),([(xpls,2)],5)], [([],5),([],4)]>
Critical Pair <xpls(xpls(?X,xpls(?Y,?Z)),?Z_1), xpls(xpls(?X,?Y),xpls(?Z,?Z_1))> by Rules <4, 4> preceded by [(xpls,1)]
 joinable by a reduction of rules <[([],4),([(xpls,2)],4)], [([],4)]>
Critical Pair <0, 0> by Rules <2, 0> preceded by []
 joinable by a reduction of rules <[], []>
Critical Pair <s(xpls(?X_3,0)), s(?X_3)> by Rules <3, 0> preceded by []
 joinable by a reduction of rules <[([(s,1)],0)], []>
Critical Pair <xpls(?X_4,xpls(?Y_4,0)), xpls(?X_4,?Y_4)> by Rules <4, 0> preceded by []
 joinable by a reduction of rules <[([(xpls,2)],0)], []>
Critical Pair <xpls(0,?X_5), ?X_5> by Rules <5, 0> preceded by []
 joinable by a reduction of rules <[([],2)], []>
Critical Pair <s(?Y_1), s(xpls(0,?Y_1))> by Rules <2, 1> preceded by []
 joinable by a reduction of rules <[], [([(s,1)],2)]>
Critical Pair <s(xpls(?X_3,s(?Y_1))), s(xpls(s(?X_3),?Y_1))> by Rules <3, 1> preceded by []
 joinable by a reduction of rules <[([(s,1)],1)], [([(s,1)],3)]>
Critical Pair <xpls(?X_4,xpls(?Y_4,s(?Y_1))), s(xpls(xpls(?X_4,?Y_4),?Y_1))> by Rules <4, 1> preceded by []
 joinable by a reduction of rules <[([(xpls,2)],1),([],1)], [([(s,1)],4)]>
Critical Pair <xpls(s(?Y_1),?X_5), s(xpls(?X_5,?Y_1))> by Rules <5, 1> preceded by []
 joinable by a reduction of rules <[([],3)], [([(s,1)],5)]>
Critical Pair <xpls(?Y_5,0), ?Y_5> by Rules <5, 2> preceded by []
 joinable by a reduction of rules <[([],0)], []>
Critical Pair <xpls(?Y_5,s(?X_3)), s(xpls(?X_3,?Y_5))> by Rules <5, 3> preceded by []
 joinable by a reduction of rules <[([],1)], [([(s,1)],5)]>
Critical Pair <xpls(?Y_5,xpls(?X_4,?Y_4)), xpls(?X_4,xpls(?Y_4,?Y_5))> by Rules <5, 4> preceded by []
 joinable by a reduction of rules <[([],5),([],4)], []>
unknown Diagram Decreasing
check Non-Confluence...
obtain 8 rules by 3 steps unfolding
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)),
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,?Y) -> xpls(?X,?Y),
     xpls(?X,s(0)) -> s(?X) ]
29 critical pairs found (<= 100 will be examined).
   [ xpls(?X_6,0) = ?X_6,
     xpls(?Y_5,0) = ?Y_5,
     xpls(0,?X_5) = ?X_5,
     xpls(0,?Y_6) = ?Y_6,
     xpls(?Y_6,?X_6) = xpls(?X_6,?Y_6),
     s(xpls(?X_3,0)) = s(?X_3),
     s(xpls(?X_7,0)) = s(?X_7),
     s(xpls(0,?Y_1)) = s(?Y_1),
     xpls(?X_7,s(0)) = s(?X_7),
     xpls(s(0),?X_7) = s(?X_7),
     s(xpls(?X_3,?Y_5)) = xpls(?Y_5,s(?X_3)),
     s(xpls(?X_3,?Y_6)) = xpls(s(?X_3),?Y_6),
     s(xpls(?X_5,?Y_1)) = xpls(s(?Y_1),?X_5),
     s(xpls(?X_6,?Y_1)) = xpls(?X_6,s(?Y_1)),
     s(xpls(?X_3,s(0))) = s(s(?X_3)),
     xpls(?X,xpls(0,?Z_4)) = xpls(?X,?Z_4),
     xpls(?X_4,xpls(?Y_4,0)) = xpls(?X_4,?Y_4),
     xpls(0,xpls(?Y_2,?Z_4)) = xpls(?Y_2,?Z_4),
     s(xpls(s(?X_3),?Y_1)) = s(xpls(?X_3,s(?Y_1))),
     xpls(?X_4,xpls(?Y_4,?Y_5)) = xpls(?Y_5,xpls(?X_4,?Y_4)),
     xpls(?X_4,xpls(?Y_4,?Y_6)) = xpls(xpls(?X_4,?Y_4),?Y_6),
     xpls(?X_5,xpls(?Y_5,?Z_4)) = xpls(xpls(?Y_5,?X_5),?Z_4),
     xpls(?X_6,xpls(?Y_6,?Z_4)) = xpls(xpls(?X_6,?Y_6),?Z_4),
     xpls(?X_4,xpls(?Y_4,s(0))) = s(xpls(?X_4,?Y_4)),
     xpls(?X_7,xpls(s(0),?Z_4)) = xpls(s(?X_7),?Z_4),
     s(xpls(xpls(?X_4,?Y_4),?Y_1)) = xpls(?X_4,xpls(?Y_4,s(?Y_1))),
     xpls(?X_1,xpls(s(?Y_1),?Z_4)) = xpls(s(xpls(?X_1,?Y_1)),?Z_4),
     xpls(s(?X_3),xpls(?Y_3,?Z_4)) = xpls(s(xpls(?X_3,?Y_3)),?Z_4),
     xpls(xpls(?X,?Y),xpls(?Z,?Z_1)) = xpls(xpls(?X,xpls(?Y,?Z)),?Z_1) ]
strenghten xpls(c_1,0) and c_1
strenghten xpls(0,c_1) and c_1
strenghten xpls(c_2,c_1) and xpls(c_1,c_2)
strenghten s(xpls(c_1,0)) and s(c_1)
strenghten s(xpls(0,c_1)) and s(c_1)
strenghten xpls(c_1,s(0)) and s(c_1)
strenghten xpls(s(0),c_1) and s(c_1)
strenghten s(xpls(c_1,c_2)) and xpls(c_2,s(c_1))
strenghten s(xpls(c_1,c_2)) and xpls(s(c_1),c_2)
strenghten s(xpls(c_1,c_2)) and xpls(s(c_2),c_1)
strenghten s(xpls(c_1,c_2)) and xpls(c_1,s(c_2))
strenghten s(xpls(c_1,s(0))) and s(s(c_1))
strenghten xpls(c_1,xpls(0,c_2)) and xpls(c_1,c_2)
strenghten xpls(c_1,xpls(c_2,0)) and xpls(c_1,c_2)
strenghten xpls(0,xpls(c_1,c_2)) and xpls(c_1,c_2)
strenghten s(xpls(s(c_1),c_2)) and s(xpls(c_1,s(c_2)))
strenghten xpls(c_1,xpls(c_2,c_3)) and xpls(c_3,xpls(c_1,c_2))
strenghten xpls(c_1,xpls(c_2,c_3)) and xpls(xpls(c_1,c_2),c_3)
strenghten xpls(c_1,xpls(c_2,c_3)) and xpls(xpls(c_2,c_1),c_3)
strenghten xpls(c_1,xpls(c_2,s(0))) and s(xpls(c_1,c_2))
strenghten xpls(c_1,xpls(s(0),c_2)) and xpls(s(c_1),c_2)
strenghten s(xpls(xpls(c_1,c_2),c_3)) and xpls(c_1,xpls(c_2,s(c_3)))
candidates for finding a counterexample:
   [ xpls(0,c_1) = c_1,
     xpls(c_1,0) = c_1,
     xpls(c_1,c_2) = xpls(c_2,c_1),
     xpls(c_2,c_1) = xpls(c_1,c_2),
     s(xpls(0,c_1)) = s(c_1),
     s(xpls(c_1,0)) = s(c_1),
     xpls(s(0),c_1) = s(c_1),
     xpls(c_1,s(0)) = s(c_1),
     s(xpls(c_1,c_2)) = s(xpls(c_2,c_1)),
     s(xpls(c_1,c_2)) = xpls(s(c_1),c_2),
     s(xpls(c_1,c_2)) = xpls(s(c_2),c_1),
     s(xpls(c_1,c_2)) = xpls(c_1,s(c_2)),
     s(xpls(c_1,c_2)) = xpls(c_2,s(c_1)),
     s(xpls(c_2,c_1)) = s(xpls(c_1,c_2)),
     s(xpls(c_2,c_1)) = xpls(s(c_1),c_2),
     s(xpls(c_2,c_1)) = xpls(s(c_2),c_1),
     s(xpls(c_2,c_1)) = xpls(c_1,s(c_2)),
     s(xpls(c_2,c_1)) = xpls(c_2,s(c_1)),
     xpls(s(c_2),c_1) = s(xpls(c_1,c_2)),
     xpls(s(c_2),c_1) = s(xpls(c_2,c_1)),
     xpls(s(c_2),c_1) = xpls(s(c_1),c_2),
     xpls(s(c_2),c_1) = xpls(c_2,s(c_1)),
     xpls(c_1,s(c_2)) = s(xpls(c_1,c_2)),
     xpls(c_1,s(c_2)) = s(xpls(c_2,c_1)),
     xpls(c_1,s(c_2)) = xpls(s(c_1),c_2),
     xpls(c_1,s(c_2)) = xpls(c_2,s(c_1)),
     s(s(xpls(0,c_1))) = s(s(c_1)),
     s(s(xpls(c_1,0))) = s(s(c_1)),
     s(xpls(s(0),c_1)) = s(s(c_1)),
     s(xpls(c_1,s(0))) = s(s(c_1)),
     xpls(0,xpls(c_1,c_2)) = xpls(c_1,c_2),
     xpls(0,xpls(c_1,c_2)) = xpls(c_2,c_1),
     xpls(0,xpls(c_2,c_1)) = xpls(c_1,c_2),
     xpls(0,xpls(c_2,c_1)) = xpls(c_2,c_1),
     xpls(c_1,xpls(0,c_2)) = xpls(c_1,c_2),
     xpls(c_1,xpls(0,c_2)) = xpls(c_2,c_1),
     xpls(c_1,xpls(c_2,0)) = xpls(c_1,c_2),
     xpls(c_1,xpls(c_2,0)) = xpls(c_2,c_1),
     xpls(c_2,xpls(0,c_1)) = xpls(c_1,c_2),
     xpls(c_2,xpls(0,c_1)) = xpls(c_2,c_1),
     xpls(c_2,xpls(c_1,0)) = xpls(c_1,c_2),
     xpls(c_2,xpls(c_1,0)) = xpls(c_2,c_1),
     xpls(xpls(0,c_1),c_2) = xpls(c_1,c_2),
     xpls(xpls(0,c_1),c_2) = xpls(c_2,c_1),
     xpls(xpls(0,c_2),c_1) = xpls(c_1,c_2),
     xpls(xpls(0,c_2),c_1) = xpls(c_2,c_1),
     xpls(xpls(c_1,c_2),0) = xpls(c_1,c_2),
     xpls(xpls(c_1,c_2),0) = xpls(c_2,c_1),
     xpls(xpls(c_2,0),c_1) = xpls(c_1,c_2),
     xpls(xpls(c_2,0),c_1) = xpls(c_2,c_1),
     xpls(xpls(c_2,c_1),0) = xpls(c_1,c_2),
     xpls(xpls(c_2,c_1),0) = xpls(c_2,c_1),
     s(s(xpls(c_1,c_2))) = s(s(xpls(c_2,c_1))),
     s(s(xpls(c_1,c_2))) = s(xpls(s(c_2),c_1)),
     s(s(xpls(c_1,c_2))) = s(xpls(c_1,s(c_2))),
     s(s(xpls(c_2,c_1))) = s(s(xpls(c_1,c_2))),
     s(s(xpls(c_2,c_1))) = s(xpls(s(c_2),c_1)),
     s(s(xpls(c_2,c_1))) = s(xpls(c_1,s(c_2))),
     s(xpls(s(c_1),c_2)) = s(s(xpls(c_1,c_2))),
     s(xpls(s(c_1),c_2)) = s(s(xpls(c_2,c_1))),
     s(xpls(s(c_1),c_2)) = s(xpls(s(c_2),c_1)),
     s(xpls(s(c_1),c_2)) = s(xpls(c_1,s(c_2))),
     s(xpls(c_2,s(c_1))) = s(s(xpls(c_1,c_2))),
     s(xpls(c_2,s(c_1))) = s(s(xpls(c_2,c_1))),
     s(xpls(c_2,s(c_1))) = s(xpls(s(c_2),c_1)),
     s(xpls(c_2,s(c_1))) = s(xpls(c_1,s(c_2))),
     xpls(c_1,xpls(c_2,c_3)) = xpls(c_1,xpls(c_3,c_2)),
     xpls(c_1,xpls(c_2,c_3)) = xpls(c_2,xpls(c_1,c_3)),
     xpls(c_1,xpls(c_2,c_3)) = xpls(c_2,xpls(c_3,c_1)),
     xpls(c_1,xpls(c_2,c_3)) = xpls(c_3,xpls(c_1,c_2)),
     xpls(c_1,xpls(c_2,c_3)) = xpls(c_3,xpls(c_2,c_1)),
     xpls(c_1,xpls(c_2,c_3)) = xpls(xpls(c_1,c_2),c_3),
     xpls(c_1,xpls(c_2,c_3)) = xpls(xpls(c_1,c_3),c_2),
     xpls(c_1,xpls(c_2,c_3)) = xpls(xpls(c_2,c_1),c_3),
     xpls(c_1,xpls(c_2,c_3)) = xpls(xpls(c_2,c_3),c_1),
     xpls(c_1,xpls(c_3,c_2)) = xpls(c_1,xpls(c_2,c_3)),
     xpls(c_1,xpls(c_3,c_2)) = xpls(c_2,xpls(c_1,c_3)),
     xpls(c_1,xpls(c_3,c_2)) = xpls(c_2,xpls(c_3,c_1)),
     xpls(c_1,xpls(c_3,c_2)) = xpls(c_3,xpls(c_1,c_2)),
     xpls(c_1,xpls(c_3,c_2)) = xpls(c_3,xpls(c_2,c_1)),
     xpls(c_1,xpls(c_3,c_2)) = xpls(xpls(c_1,c_2),c_3),
     xpls(c_1,xpls(c_3,c_2)) = xpls(xpls(c_1,c_3),c_2),
     xpls(c_1,xpls(c_3,c_2)) = xpls(xpls(c_2,c_1),c_3),
     xpls(c_1,xpls(c_3,c_2)) = xpls(xpls(c_2,c_3),c_1),
     xpls(c_2,xpls(c_1,c_3)) = xpls(c_1,xpls(c_2,c_3)),
     xpls(c_2,xpls(c_1,c_3)) = xpls(c_1,xpls(c_3,c_2)),
     xpls(c_2,xpls(c_1,c_3)) = xpls(c_2,xpls(c_3,c_1)),
     xpls(c_2,xpls(c_1,c_3)) = xpls(c_3,xpls(c_1,c_2)),
     xpls(c_2,xpls(c_1,c_3)) = xpls(c_3,xpls(c_2,c_1)),
     xpls(c_2,xpls(c_1,c_3)) = xpls(xpls(c_1,c_2),c_3),
     xpls(c_2,xpls(c_1,c_3)) = xpls(xpls(c_1,c_3),c_2),
     xpls(c_2,xpls(c_1,c_3)) = xpls(xpls(c_2,c_1),c_3),
     xpls(c_2,xpls(c_1,c_3)) = xpls(xpls(c_2,c_3),c_1),
     xpls(c_2,xpls(c_3,c_1)) = xpls(c_1,xpls(c_2,c_3)),
     xpls(c_2,xpls(c_3,c_1)) = xpls(c_1,xpls(c_3,c_2)),
     xpls(c_2,xpls(c_3,c_1)) = xpls(c_2,xpls(c_1,c_3)),
     xpls(c_2,xpls(c_3,c_1)) = xpls(c_3,xpls(c_1,c_2)),
     xpls(c_2,xpls(c_3,c_1)) = xpls(c_3,xpls(c_2,c_1)),
     xpls(c_2,xpls(c_3,c_1)) = xpls(xpls(c_1,c_2),c_3),
     xpls(c_2,xpls(c_3,c_1)) = xpls(xpls(c_1,c_3),c_2),
     xpls(c_2,xpls(c_3,c_1)) = xpls(xpls(c_2,c_1),c_3),
     xpls(c_2,xpls(c_3,c_1)) = xpls(xpls(c_2,c_3),c_1),
     xpls(c_3,xpls(c_2,c_1)) = xpls(c_1,xpls(c_2,c_3)),
     xpls(c_3,xpls(c_2,c_1)) = xpls(c_1,xpls(c_3,c_2)),
     xpls(c_3,xpls(c_2,c_1)) = xpls(c_2,xpls(c_1,c_3)),
     xpls(c_3,xpls(c_2,c_1)) = xpls(c_2,xpls(c_3,c_1)),
     xpls(c_3,xpls(c_2,c_1)) = xpls(c_3,xpls(c_1,c_2)),
     xpls(c_3,xpls(c_2,c_1)) = xpls(xpls(c_1,c_2),c_3),
     xpls(c_3,xpls(c_2,c_1)) = xpls(xpls(c_1,c_3),c_2),
     xpls(c_3,xpls(c_2,c_1)) = xpls(xpls(c_2,c_1),c_3),
     xpls(c_3,xpls(c_2,c_1)) = xpls(xpls(c_2,c_3),c_1),
     xpls(xpls(c_2,c_3),c_1) = xpls(c_1,xpls(c_2,c_3)),
     xpls(xpls(c_2,c_3),c_1) = xpls(c_1,xpls(c_3,c_2)),
     xpls(xpls(c_2,c_3),c_1) = xpls(c_2,xpls(c_1,c_3)),
     xpls(xpls(c_2,c_3),c_1) = xpls(c_2,xpls(c_3,c_1)),
     xpls(xpls(c_2,c_3),c_1) = xpls(c_3,xpls(c_1,c_2)),
     xpls(xpls(c_2,c_3),c_1) = xpls(c_3,xpls(c_2,c_1)),
     xpls(xpls(c_2,c_3),c_1) = xpls(xpls(c_1,c_2),c_3),
     xpls(xpls(c_2,c_3),c_1) = xpls(xpls(c_1,c_3),c_2),
     xpls(xpls(c_2,c_3),c_1) = xpls(xpls(c_2,c_1),c_3),
     xpls(xpls(c_3,c_1),c_2) = xpls(c_1,xpls(c_2,c_3)),
     xpls(xpls(c_3,c_1),c_2) = xpls(c_1,xpls(c_3,c_2)),
     xpls(xpls(c_3,c_1),c_2) = xpls(c_2,xpls(c_1,c_3)),
     xpls(xpls(c_3,c_1),c_2) = xpls(c_2,xpls(c_3,c_1)),
     xpls(xpls(c_3,c_1),c_2) = xpls(c_3,xpls(c_1,c_2)),
     xpls(xpls(c_3,c_1),c_2) = xpls(c_3,xpls(c_2,c_1)),
     xpls(xpls(c_3,c_1),c_2) = xpls(xpls(c_1,c_2),c_3),
     xpls(xpls(c_3,c_1),c_2) = xpls(xpls(c_1,c_3),c_2),
     xpls(xpls(c_3,c_1),c_2) = xpls(xpls(c_2,c_1),c_3),
     xpls(xpls(c_3,c_1),c_2) = xpls(xpls(c_2,c_3),c_1),
     xpls(xpls(c_3,c_2),c_1) = xpls(c_1,xpls(c_2,c_3)),
     xpls(xpls(c_3,c_2),c_1) = xpls(c_1,xpls(c_3,c_2)),
     xpls(xpls(c_3,c_2),c_1) = xpls(c_2,xpls(c_1,c_3)),
     xpls(xpls(c_3,c_2),c_1) = xpls(c_2,xpls(c_3,c_1)),
     xpls(xpls(c_3,c_2),c_1) = xpls(c_3,xpls(c_1,c_2)),
     xpls(xpls(c_3,c_2),c_1) = xpls(c_3,xpls(c_2,c_1)),
     xpls(xpls(c_3,c_2),c_1) = xpls(xpls(c_1,c_2),c_3),
     xpls(xpls(c_3,c_2),c_1) = xpls(xpls(c_1,c_3),c_2),
     xpls(xpls(c_3,c_2),c_1) = xpls(xpls(c_2,c_1),c_3),
     xpls(xpls(c_3,c_2),c_1) = xpls(xpls(c_2,c_3),c_1),
     s(xpls(0,xpls(c_2,c_1))) = s(xpls(c_1,c_2)),
     s(xpls(0,xpls(c_2,c_1))) = s(xpls(c_2,c_1)),
     s(xpls(0,xpls(c_2,c_1))) = xpls(s(c_1),c_2),
     s(xpls(0,xpls(c_2,c_1))) = xpls(c_2,s(c_1)),
     s(xpls(c_1,xpls(0,c_2))) = s(xpls(c_1,c_2)),
     s(xpls(c_1,xpls(0,c_2))) = s(xpls(c_2,c_1)),
     s(xpls(c_1,xpls(0,c_2))) = xpls(s(c_1),c_2),
     s(xpls(c_1,xpls(0,c_2))) = xpls(c_2,s(c_1)),
     s(xpls(c_1,xpls(c_2,0))) = s(xpls(c_1,c_2)),
     s(xpls(c_1,xpls(c_2,0))) = s(xpls(c_2,c_1)),
     s(xpls(c_1,xpls(c_2,0))) = xpls(s(c_1),c_2),
     s(xpls(c_1,xpls(c_2,0))) = xpls(c_2,s(c_1)),
     s(xpls(xpls(0,c_2),c_1)) = s(xpls(c_1,c_2)),
     s(xpls(xpls(0,c_2),c_1)) = s(xpls(c_2,c_1)),
     s(xpls(xpls(0,c_2),c_1)) = xpls(s(c_1),c_2),
     s(xpls(xpls(0,c_2),c_1)) = xpls(c_2,s(c_1)),
     s(xpls(xpls(c_2,0),c_1)) = s(xpls(c_1,c_2)),
     s(xpls(xpls(c_2,0),c_1)) = s(xpls(c_2,c_1)),
     xpls(s(0),xpls(c_1,c_2)) = s(xpls(c_1,c_2)),
     xpls(s(0),xpls(c_1,c_2)) = s(xpls(c_2,c_1)),
     xpls(s(0),xpls(c_1,c_2)) = xpls(s(c_1),c_2),
     xpls(s(0),xpls(c_1,c_2)) = xpls(c_2,s(c_1)),
     xpls(s(0),xpls(c_2,c_1)) = s(xpls(c_1,c_2)),
     xpls(s(0),xpls(c_2,c_1)) = s(xpls(c_2,c_1)),
     xpls(s(0),xpls(c_2,c_1)) = xpls(s(c_1),c_2),
     xpls(s(0),xpls(c_2,c_1)) = xpls(c_2,s(c_1)),
     xpls(c_1,s(xpls(0,c_2))) = s(xpls(c_1,c_2)),
     xpls(c_1,s(xpls(0,c_2))) = s(xpls(c_2,c_1)),
     xpls(c_1,s(xpls(0,c_2))) = xpls(s(c_1),c_2),
     xpls(c_1,s(xpls(0,c_2))) = xpls(c_2,s(c_1)),
     xpls(c_1,s(xpls(c_2,0))) = s(xpls(c_1,c_2)),
     xpls(c_1,s(xpls(c_2,0))) = s(xpls(c_2,c_1)),
     xpls(c_1,xpls(s(0),c_2)) = s(xpls(c_1,c_2)),
     xpls(c_1,xpls(s(0),c_2)) = s(xpls(c_2,c_1)),
     s(xpls(c_1,xpls(c_2,c_3))) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(c_1,xpls(c_2,c_3))) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(c_1,xpls(c_2,c_3))) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(c_1,xpls(c_2,c_3))) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(c_1,xpls(c_2,c_3))) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(c_1,xpls(c_2,c_3))) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(c_1,xpls(c_2,c_3))) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(c_1,xpls(c_2,c_3))) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(c_1,xpls(c_2,c_3))) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(c_1,xpls(c_3,c_2))) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(c_1,xpls(c_3,c_2))) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(c_1,xpls(c_3,c_2))) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(c_1,xpls(c_3,c_2))) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(c_1,xpls(c_3,c_2))) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(c_1,xpls(c_3,c_2))) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(c_1,xpls(c_3,c_2))) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(c_1,xpls(c_3,c_2))) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(c_1,xpls(c_3,c_2))) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(c_2,xpls(c_1,c_3))) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(c_2,xpls(c_1,c_3))) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(c_2,xpls(c_1,c_3))) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(c_2,xpls(c_1,c_3))) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(c_2,xpls(c_1,c_3))) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(c_2,xpls(c_1,c_3))) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(c_2,xpls(c_1,c_3))) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(c_2,xpls(c_1,c_3))) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(c_2,xpls(c_1,c_3))) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(c_2,xpls(c_1,c_3))) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(c_2,xpls(c_3,c_1))) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(c_2,xpls(c_3,c_1))) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(c_2,xpls(c_3,c_1))) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(c_2,xpls(c_3,c_1))) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(c_2,xpls(c_3,c_1))) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(c_2,xpls(c_3,c_1))) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(c_2,xpls(c_3,c_1))) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(c_2,xpls(c_3,c_1))) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(c_2,xpls(c_3,c_1))) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(c_2,xpls(c_3,c_1))) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(c_3,xpls(c_1,c_2))) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(c_3,xpls(c_1,c_2))) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(c_3,xpls(c_1,c_2))) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(c_3,xpls(c_1,c_2))) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(c_3,xpls(c_1,c_2))) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(c_3,xpls(c_1,c_2))) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(c_3,xpls(c_1,c_2))) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(c_3,xpls(c_1,c_2))) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(c_3,xpls(c_1,c_2))) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(c_3,xpls(c_1,c_2))) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(c_3,xpls(c_2,c_1))) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(c_3,xpls(c_2,c_1))) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(c_3,xpls(c_2,c_1))) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(c_3,xpls(c_2,c_1))) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(c_3,xpls(c_2,c_1))) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(c_3,xpls(c_2,c_1))) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(c_3,xpls(c_2,c_1))) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(c_3,xpls(c_2,c_1))) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(c_3,xpls(c_2,c_1))) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(c_3,xpls(c_2,c_1))) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(xpls(c_1,c_2),c_3)) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(xpls(c_1,c_2),c_3)) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(xpls(c_1,c_2),c_3)) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(xpls(c_1,c_2),c_3)) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(xpls(c_1,c_2),c_3)) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(xpls(c_1,c_2),c_3)) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(xpls(c_1,c_2),c_3)) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(xpls(c_1,c_2),c_3)) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(xpls(c_1,c_2),c_3)) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(xpls(c_1,c_2),c_3)) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(xpls(c_1,c_3),c_2)) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(xpls(c_1,c_3),c_2)) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(xpls(c_1,c_3),c_2)) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(xpls(c_1,c_3),c_2)) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(xpls(c_1,c_3),c_2)) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(xpls(c_1,c_3),c_2)) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(xpls(c_1,c_3),c_2)) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(xpls(c_1,c_3),c_2)) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(xpls(c_1,c_3),c_2)) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(xpls(c_1,c_3),c_2)) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(xpls(c_2,c_1),c_3)) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(xpls(c_2,c_1),c_3)) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(xpls(c_2,c_1),c_3)) = s(xpls(xpls(c_2,c_3),c_1)),
     s(xpls(xpls(c_2,c_1),c_3)) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(xpls(c_2,c_1),c_3)) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(xpls(c_2,c_1),c_3)) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(xpls(c_2,c_1),c_3)) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(xpls(c_2,c_1),c_3)) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(xpls(c_2,c_1),c_3)) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(xpls(c_2,c_1),c_3)) = xpls(c_1,xpls(c_2,s(c_3))),
     s(xpls(xpls(c_2,c_3),c_1)) = s(xpls(c_1,xpls(c_2,c_3))),
     s(xpls(xpls(c_2,c_3),c_1)) = s(xpls(c_1,xpls(c_3,c_2))),
     s(xpls(xpls(c_2,c_3),c_1)) = xpls(s(c_3),xpls(c_2,c_1)),
     s(xpls(xpls(c_2,c_3),c_1)) = xpls(s(xpls(c_2,c_3)),c_1),
     s(xpls(xpls(c_2,c_3),c_1)) = xpls(s(xpls(c_3,c_2)),c_1),
     s(xpls(xpls(c_2,c_3),c_1)) = xpls(c_1,s(xpls(c_2,c_3))),
     s(xpls(xpls(c_2,c_3),c_1)) = xpls(c_1,s(xpls(c_3,c_2))),
     s(xpls(xpls(c_2,c_3),c_1)) = xpls(c_1,xpls(s(c_3),c_2)),
     s(xpls(xpls(c_2,c_3),c_1)) = xpls(c_1,xpls(c_2,s(c_3))),
     xpls(s(c_1),xpls(c_2,c_3)) = xpls(s(xpls(c_1,c_2)),c_3),
     xpls(c_1,xpls(s(c_2),c_3)) = xpls(s(xpls(c_1,c_2)),c_3),
     xpls(xpls(c_1,c_2),xpls(c_3,c_4)) = xpls(xpls(c_1,xpls(c_2,c_3)),c_4) ]
obtain 100 candidates for checking non-joinability
check by TCAP-ApproximationProve non-joinability of xpls(0,c_1) and c_1 by tcaps
Prove non-joinability of xpls(c_1,0) and c_1 by tcaps
Prove non-joinability of xpls(c_1,c_2) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(c_2,c_1) and xpls(c_1,c_2) by tcaps
Prove non-joinability of s(xpls(0,c_1)) and s(c_1) by tcaps
Prove non-joinability of s(xpls(c_1,0)) and s(c_1) by tcaps
Prove non-joinability of xpls(s(0),c_1) and s(c_1) by tcaps
Prove non-joinability of xpls(c_1,s(0)) and s(c_1) by tcaps
Prove non-joinability of s(xpls(c_1,c_2)) and s(xpls(c_2,c_1)) by tcaps
Prove non-joinability of s(xpls(c_1,c_2)) and xpls(s(c_1),c_2) by tcaps
Prove non-joinability of s(xpls(c_1,c_2)) and xpls(s(c_2),c_1) by tcaps
Prove non-joinability of s(xpls(c_1,c_2)) and xpls(c_1,s(c_2)) by tcaps
Prove non-joinability of s(xpls(c_1,c_2)) and xpls(c_2,s(c_1)) by tcaps
Prove non-joinability of s(xpls(c_2,c_1)) and s(xpls(c_1,c_2)) by tcaps
Prove non-joinability of s(xpls(c_2,c_1)) and xpls(s(c_1),c_2) by tcaps
Prove non-joinability of s(xpls(c_2,c_1)) and xpls(s(c_2),c_1) by tcaps
Prove non-joinability of s(xpls(c_2,c_1)) and xpls(c_1,s(c_2)) by tcaps
Prove non-joinability of s(xpls(c_2,c_1)) and xpls(c_2,s(c_1)) by tcaps
Prove non-joinability of xpls(s(c_2),c_1) and s(xpls(c_1,c_2)) by tcaps
Prove non-joinability of xpls(s(c_2),c_1) and s(xpls(c_2,c_1)) by tcaps
Prove non-joinability of xpls(s(c_2),c_1) and xpls(s(c_1),c_2) by tcaps
Prove non-joinability of xpls(s(c_2),c_1) and xpls(c_2,s(c_1)) by tcaps
Prove non-joinability of xpls(c_1,s(c_2)) and s(xpls(c_1,c_2)) by tcaps
Prove non-joinability of xpls(c_1,s(c_2)) and s(xpls(c_2,c_1)) by tcaps
Prove non-joinability of xpls(c_1,s(c_2)) and xpls(s(c_1),c_2) by tcaps
Prove non-joinability of xpls(c_1,s(c_2)) and xpls(c_2,s(c_1)) by tcaps
Prove non-joinability of s(s(xpls(0,c_1))) and s(s(c_1)) by tcaps
Prove non-joinability of s(s(xpls(c_1,0))) and s(s(c_1)) by tcaps
Prove non-joinability of s(xpls(s(0),c_1)) and s(s(c_1)) by tcaps
Prove non-joinability of s(xpls(c_1,s(0))) and s(s(c_1)) by tcaps
Prove non-joinability of xpls(0,xpls(c_1,c_2)) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(0,xpls(c_1,c_2)) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(0,xpls(c_2,c_1)) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(0,xpls(c_2,c_1)) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(c_1,xpls(0,c_2)) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(c_1,xpls(0,c_2)) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,0)) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,0)) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(c_2,xpls(0,c_1)) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(c_2,xpls(0,c_1)) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,0)) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,0)) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(xpls(0,c_1),c_2) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(xpls(0,c_1),c_2) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(xpls(0,c_2),c_1) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(xpls(0,c_2),c_1) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(xpls(c_1,c_2),0) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(xpls(c_1,c_2),0) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(xpls(c_2,0),c_1) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(xpls(c_2,0),c_1) and xpls(c_2,c_1) by tcaps
Prove non-joinability of xpls(xpls(c_2,c_1),0) and xpls(c_1,c_2) by tcaps
Prove non-joinability of xpls(xpls(c_2,c_1),0) and xpls(c_2,c_1) by tcaps
Prove non-joinability of s(s(xpls(c_1,c_2))) and s(s(xpls(c_2,c_1))) by tcaps
Prove non-joinability of s(s(xpls(c_1,c_2))) and s(xpls(s(c_2),c_1)) by tcaps
Prove non-joinability of s(s(xpls(c_1,c_2))) and s(xpls(c_1,s(c_2))) by tcaps
Prove non-joinability of s(s(xpls(c_2,c_1))) and s(s(xpls(c_1,c_2))) by tcaps
Prove non-joinability of s(s(xpls(c_2,c_1))) and s(xpls(s(c_2),c_1)) by tcaps
Prove non-joinability of s(s(xpls(c_2,c_1))) and s(xpls(c_1,s(c_2))) by tcaps
Prove non-joinability of s(xpls(s(c_1),c_2)) and s(s(xpls(c_1,c_2))) by tcaps
Prove non-joinability of s(xpls(s(c_1),c_2)) and s(s(xpls(c_2,c_1))) by tcaps
Prove non-joinability of s(xpls(s(c_1),c_2)) and s(xpls(s(c_2),c_1)) by tcaps
Prove non-joinability of s(xpls(s(c_1),c_2)) and s(xpls(c_1,s(c_2))) by tcaps
Prove non-joinability of s(xpls(c_2,s(c_1))) and s(s(xpls(c_1,c_2))) by tcaps
Prove non-joinability of s(xpls(c_2,s(c_1))) and s(s(xpls(c_2,c_1))) by tcaps
Prove non-joinability of s(xpls(c_2,s(c_1))) and s(xpls(s(c_2),c_1)) by tcaps
Prove non-joinability of s(xpls(c_2,s(c_1))) and s(xpls(c_1,s(c_2))) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(c_1,xpls(c_3,c_2)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(c_2,xpls(c_1,c_3)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(c_2,xpls(c_3,c_1)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(c_3,xpls(c_1,c_2)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(c_3,xpls(c_2,c_1)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(xpls(c_1,c_2),c_3) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(xpls(c_1,c_3),c_2) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(xpls(c_2,c_1),c_3) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_2,c_3)) and xpls(xpls(c_2,c_3),c_1) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(c_1,xpls(c_2,c_3)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(c_2,xpls(c_1,c_3)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(c_2,xpls(c_3,c_1)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(c_3,xpls(c_1,c_2)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(c_3,xpls(c_2,c_1)) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(xpls(c_1,c_2),c_3) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(xpls(c_1,c_3),c_2) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(xpls(c_2,c_1),c_3) by tcaps
Prove non-joinability of xpls(c_1,xpls(c_3,c_2)) and xpls(xpls(c_2,c_3),c_1) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(c_1,xpls(c_2,c_3)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(c_1,xpls(c_3,c_2)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(c_2,xpls(c_3,c_1)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(c_3,xpls(c_1,c_2)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(c_3,xpls(c_2,c_1)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(xpls(c_1,c_2),c_3) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(xpls(c_1,c_3),c_2) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(xpls(c_2,c_1),c_3) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_1,c_3)) and xpls(xpls(c_2,c_3),c_1) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_3,c_1)) and xpls(c_1,xpls(c_2,c_3)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_3,c_1)) and xpls(c_1,xpls(c_3,c_2)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_3,c_1)) and xpls(c_2,xpls(c_1,c_3)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_3,c_1)) and xpls(c_3,xpls(c_1,c_2)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_3,c_1)) and xpls(c_3,xpls(c_2,c_1)) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_3,c_1)) and xpls(xpls(c_1,c_2),c_3) by tcaps
Prove non-joinability of xpls(c_2,xpls(c_3,c_1)) and xpls(xpls(c_1,c_3),c_2) by tcaps
 (failure)
check by Ordering(rpo), check by Tree-Automata ApproximationProve non-joinability of xpls(0,c_1) and c_1 by rpo
   [ ]
   [ ]
   [ xpls(0,?Y) -> ?Y,
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(0,c_1),c_1}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,0) and c_1 by rpo
   [ ]
   [ ]
   [ xpls(?X,0) -> ?X,
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,0),c_1}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_0,
     c_1 -> q_1 ]
added rules:
   [ c_1 -> q_0,
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_1,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,c_2) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,c_2),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{c_1,c_2,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_2,c_1) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_2,c_1),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{c_1,c_2,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(0,c_1)) and s(c_1) by rpo
   [ ]
   [ ]
   [ xpls(0,?Y) -> ?Y,
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(0,c_1)),s(c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,xpls(*,*),xpls(0,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     s(q_{xpls(0,c_1)}) -> q_0,
     s(q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(0,c_1)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{*},q_{0},q_{xpls(0,c_1)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_1,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(0,c_1)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(0,c_1)},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)},
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_1,0)) and s(c_1) by rpo
   [ ]
   [ ]
   [ xpls(?X,0) -> ?X,
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_1,0)),s(c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,xpls(*,*),xpls(c_1,0)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(c_1,0)},
     s(q_{xpls(c_1,0)}) -> q_0,
     s(q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{xpls(c_1,0)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(c_1,0)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{xpls(c_1,0)},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_1,
     s(q_{xpls(c_1,0)}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{xpls(c_1,0)},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(c_1,0)},
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(c_1,0)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(s(0),c_1) and s(c_1) by rpo
   [ ]
   [ ]
   [ xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(0,?Y) -> ?Y,
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(s(0),c_1),s(c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,s(0),c_1,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     s(q_{0}) -> q_{s(0)},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{s(0)},q_{c_1}) -> q_0,
     s(q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(0)}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{*},q_{0},q_{s(0)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_1,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{0}) -> q_{s(0)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(0)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(0)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,s(0)) and s(c_1) by rpo
   [ ]
   [ ]
   [ xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,0) -> ?X,
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,s(0)),s(c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,s(0),c_1,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     s(q_{0}) -> q_{s(0)},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(0)}) -> q_0,
     s(q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(0)},q_{c_1}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{*},q_{0},q_{s(0)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_1,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{0}) -> q_{s(0)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(0)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(0)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_1,c_2)) and s(xpls(c_2,c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_1,c_2)),s(xpls(c_2,c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{c_1,c_2,xpls(*,*),xpls(c_1,c_2),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     s(q_{xpls(c_2,c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{*},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_2,c_1)}) -> q_1,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_1,c_2)) and xpls(s(c_1),c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_1,c_2)),xpls(s(c_1),c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_1),c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_1}) -> q_{s(c_1)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{s(c_1)}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_1)},q_{*},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_1,c_2)) and xpls(s(c_2),c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_1,c_2)),xpls(s(c_2),c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_2),c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{s(c_2)},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_2)},q_{*},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_1,c_2)) and xpls(c_1,s(c_2)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_1,c_2)),xpls(c_1,s(c_2))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_2),c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{c_1},q_{s(c_2)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_2)},q_{*},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_1,c_2)) and xpls(c_2,s(c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_1,c_2)),xpls(c_2,s(c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_1),c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_1}) -> q_{s(c_1)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{s(c_1)},q_{c_2}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_1)},q_{*},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(c_1,c_2)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_2,c_1)) and s(xpls(c_1,c_2)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_2,c_1)),s(xpls(c_1,c_2))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{c_1,c_2,xpls(*,*),xpls(c_1,c_2),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     s(q_{xpls(c_1,c_2)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{*},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(c_1,c_2)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_2,c_1)) and xpls(s(c_1),c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_2,c_1)),xpls(s(c_1),c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_1),c_1,c_2,xpls(*,*),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_1}) -> q_{s(c_1)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{s(c_1)}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{s(c_1)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_2,c_1)) and xpls(s(c_2),c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_2,c_1)),xpls(s(c_2),c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_2),c_1,c_2,xpls(*,*),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     xpls(q_{s(c_2)},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{s(c_2)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_2,c_1)) and xpls(c_1,s(c_2)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_2,c_1)),xpls(c_1,s(c_2))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_2),c_1,c_2,xpls(*,*),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     xpls(q_{c_1},q_{s(c_2)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{s(c_2)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_2,c_1)) and xpls(c_2,s(c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_2,c_1)),xpls(c_2,s(c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_1),c_1,c_2,xpls(*,*),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_1}) -> q_{s(c_1)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{s(c_1)},q_{c_2}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{s(c_1)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_2,c_1)}) -> q_0,
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(s(c_2),c_1) and s(xpls(c_1,c_2)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(s(c_2),c_1),s(xpls(c_1,c_2))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_2),c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     s(q_{xpls(c_1,c_2)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_2)},q_{*},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(c_1,c_2)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(s(c_2),c_1) and s(xpls(c_2,c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(s(c_2),c_1),s(xpls(c_2,c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_2),c_1,c_2,xpls(*,*),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     s(q_{xpls(c_2,c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{s(c_2)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_2,c_1)}) -> q_1,
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(s(c_2),c_1) and xpls(s(c_1),c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(s(c_2),c_1),xpls(s(c_1),c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_1),s(c_2),c_1,c_2,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{c_1},q_{s(c_2)}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_1)},q_{s(c_2)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(s(c_2),c_1) and xpls(c_2,s(c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(s(c_2),c_1),xpls(c_2,s(c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_1),s(c_2),c_1,c_2,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{s(c_2)}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_1)},q_{s(c_2)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,s(c_2)) and s(xpls(c_1,c_2)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,s(c_2)),s(xpls(c_1,c_2))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_2),c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     s(q_{xpls(c_1,c_2)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_2)},q_{*},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(c_1,c_2)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,s(c_2)) and s(xpls(c_2,c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,s(c_2)),s(xpls(c_2,c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_2),c_1,c_2,xpls(*,*),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     s(q_{xpls(c_2,c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{s(c_2)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_2,c_1)}) -> q_1,
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,s(c_2)) and xpls(s(c_1),c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,s(c_2)),xpls(s(c_1),c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_1),s(c_2),c_1,c_2,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_1)},q_{s(c_2)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,s(c_2)) and xpls(c_2,s(c_1)) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,s(c_2)),xpls(c_2,s(c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{s(c_1),s(c_2),c_1,c_2,xpls(*,*)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{c_2}) -> q_{s(c_2)},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{s(c_1)},q_{s(c_2)},q_{*},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{c_2}) -> q_{s(c_2)},
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_1,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(c_2)}) -> q_0,
     xpls(q_{c_2},q_{s(c_1)}) -> q_1,
     xpls(q_{s(c_1)},q_{c_2}) -> q_1,
     xpls(q_{s(c_2)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(s(xpls(0,c_1))) and s(s(c_1)) by rpo
   [ ]
   [ ]
   [ xpls(0,?Y) -> ?Y,
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(s(xpls(0,c_1))),s(s(c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,s(c_1),s(xpls(0,c_1)),c_1,xpls(*,*),xpls(0,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{xpls(0,c_1)}) -> q_{s(xpls(0,c_1))},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     s(q_{s(xpls(0,c_1))}) -> q_0,
     s(q_{s(c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(0,c_1)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{s(c_1)},q_{*},q_{0},q_{xpls(0,c_1)},q_{s(xpls(0,c_1))},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{s(c_1)}) -> q_1,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(0,c_1)}) -> q_{s(xpls(0,c_1))},
     s(q_{s(xpls(0,c_1))}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(0,c_1)},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)},
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(s(xpls(c_1,0))) and s(s(c_1)) by rpo
   [ ]
   [ ]
   [ xpls(?X,0) -> ?X,
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(s(xpls(c_1,0))),s(s(c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,s(c_1),s(xpls(c_1,0)),c_1,xpls(*,*),xpls(c_1,0)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{xpls(c_1,0)}) -> q_{s(xpls(c_1,0))},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(c_1,0)},
     s(q_{s(xpls(c_1,0))}) -> q_0,
     s(q_{s(c_1)}) -> q_1 ]
added rules:
   [ c_1 -> q_{xpls(c_1,0)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(c_1,0)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{xpls(c_1,0)},q_{s(c_1)},q_{*},q_{0},q_{s(xpls(c_1,0))},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{xpls(c_1,0)}) -> q_{s(xpls(c_1,0))},
     s(q_{s(c_1)}) -> q_1,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{s(xpls(c_1,0))}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{xpls(c_1,0)},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(c_1,0)},
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(c_1,0)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(s(0),c_1)) and s(s(c_1)) by rpo
   [ ]
   [ ]
   [ xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(0,?Y) -> ?Y,
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(s(0),c_1)),s(s(c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,s(0),s(c_1),c_1,xpls(*,*),xpls(s(0),c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     s(q_{0}) -> q_{s(0)},
     s(q_{c_1}) -> q_{s(c_1)},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{s(0)},q_{c_1}) -> q_{xpls(s(0),c_1)},
     s(q_{xpls(s(0),c_1)}) -> q_0,
     s(q_{s(c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(s(0),c_1)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(0)}) -> q_{xpls(s(0),c_1)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{s(c_1)},q_{*},q_{0},q_{s(0)},q_{xpls(s(0),c_1)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{s(c_1)}) -> q_1,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{0}) -> q_{s(0)},
     s(q_{xpls(s(0),c_1)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(s(0),c_1)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(0)}) -> q_{xpls(s(0),c_1)},
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(0)},q_{c_1}) -> q_{xpls(s(0),c_1)},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of s(xpls(c_1,s(0))) and s(s(c_1)) by rpo
   [ ]
   [ ]
   [ xpls(?X,s(?Y)) -> s(xpls(?X,?Y)),
     xpls(?X,?Y) -> xpls(?Y,?X),
     xpls(?X,0) -> ?X,
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?X,?Y)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?Y,?Z)) ]
 (failure)

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {s(xpls(c_1,s(0))),s(s(c_1))}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,s(0),s(c_1),c_1,xpls(*,*),xpls(c_1,s(0))}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     s(q_{0}) -> q_{s(0)},
     s(q_{c_1}) -> q_{s(c_1)},
     c_1 -> q_{c_1},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(0)}) -> q_{xpls(c_1,s(0))},
     s(q_{xpls(c_1,s(0))}) -> q_0,
     s(q_{s(c_1)}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(c_1,s(0))},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(0)},q_{c_1}) -> q_{xpls(c_1,s(0))} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_1,s(0))},q_{c_1},q_{s(c_1)},q_{*},q_{0},q_{s(0)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{xpls(c_1,s(0))}) -> q_0,
     s(q_{c_1}) -> q_{s(c_1)},
     s(q_{s(c_1)}) -> q_1,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{0}) -> q_{s(0)},
     s(q_{xpls(*,*)}) -> q_{xpls(c_1,s(0))},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{s(0)}) -> q_{xpls(c_1,s(0))},
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{s(0)},q_{c_1}) -> q_{xpls(c_1,s(0))},
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(0,xpls(c_1,c_2)) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(0,xpls(c_1,c_2)),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{0},q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{xpls(c_1,c_2)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0 ]
added rules:
   [ xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{xpls(c_1,c_2)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(0,xpls(c_1,c_2)) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(0,xpls(c_1,c_2)),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{0},q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{xpls(c_1,c_2)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0 ]
added rules:
   [ xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{xpls(c_1,c_2)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(0,xpls(c_2,c_1)) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(0,xpls(c_2,c_1)),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{0},q_{xpls(c_2,c_1)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_0,
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{xpls(c_2,c_1)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0 ]
added rules:
   [ xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{xpls(c_2,c_1)},q_{0}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(c_2,c_1)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(0,xpls(c_2,c_1)) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(0,xpls(c_2,c_1)),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_2,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{0},q_{xpls(c_2,c_1)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_0,
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{xpls(c_2,c_1)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_1 -> q_0,
     c_2 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0 ]
added rules:
   [ xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{xpls(c_2,c_1)},q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{xpls(c_2,c_1)},q_{0}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_2,c_1)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(c_2,c_1)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,xpls(0,c_2)) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,xpls(0,c_2)),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(0,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(0,c_2)},
     xpls(q_{c_1},q_{xpls(0,c_2)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_2 -> q_{xpls(0,c_2)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{xpls(0,c_2)},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{0}) -> q_{xpls(0,c_2)} ]
added rules:
   [ xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_2 -> q_0,
     0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(0,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(0,c_2)},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{xpls(0,c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(0,c_2)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(0,c_2)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(0,c_2)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,xpls(0,c_2)) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,xpls(0,c_2)),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(0,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(0,c_2)},
     xpls(q_{c_1},q_{xpls(0,c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_2 -> q_{xpls(0,c_2)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(0,c_2)},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(0,c_2)} ]
added rules:
   [ xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_2 -> q_0,
     0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(0,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(0,c_2)},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{xpls(0,c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(0,c_2)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(0,c_2)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(0,c_2)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,xpls(c_2,0)) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,xpls(c_2,0)),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_2,0)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{0}) -> q_{xpls(c_2,0)},
     xpls(q_{c_1},q_{xpls(c_2,0)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_2 -> q_{xpls(c_2,0)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{xpls(c_2,0)},q_{c_1}) -> q_0,
     xpls(q_{0},q_{c_2}) -> q_{xpls(c_2,0)} ]
added rules:
   [ xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_2 -> q_0,
     0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{xpls(c_2,0)},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{xpls(c_2,0)},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{xpls(c_2,0)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(c_2,0)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(c_2,0)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(c_2,0)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_1,xpls(c_2,0)) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_1,xpls(c_2,0)),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_2,0)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{0}) -> q_{xpls(c_2,0)},
     xpls(q_{c_1},q_{xpls(c_2,0)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_2 -> q_{xpls(c_2,0)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(c_2,0)},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{0},q_{c_2}) -> q_{xpls(c_2,0)} ]
added rules:
   [ xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_2 -> q_0,
     0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{xpls(c_2,0)},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{xpls(c_2,0)},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{xpls(c_2,0)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(c_2,0)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(c_2,0)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(c_2,0)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_2,xpls(0,c_1)) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_2,xpls(0,c_1)),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(0,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{c_2},q_{xpls(0,c_1)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(0,c_1)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{xpls(0,c_1)},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)} ]
added rules:
   [ xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_1 -> q_0,
     0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(0,c_1)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(0,c_1)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{xpls(0,c_1)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(0,c_1)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_2,xpls(0,c_1)) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_2,xpls(0,c_1)),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(0,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{c_2},q_{xpls(0,c_1)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(0,c_1)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{xpls(0,c_1)},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)} ]
added rules:
   [ xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_1 -> q_0,
     0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(0,c_1)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(0,c_1)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{xpls(0,c_1)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(0,c_1)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_2,xpls(c_1,0)) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_2,xpls(c_1,0)),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_1,0)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(c_1,0)},
     xpls(q_{c_2},q_{xpls(c_1,0)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_1 -> q_{xpls(c_1,0)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{0},q_{c_1}) -> q_{xpls(c_1,0)},
     xpls(q_{xpls(c_1,0)},q_{c_2}) -> q_0 ]
added rules:
   [ xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_1 -> q_0,
     0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{xpls(c_1,0)},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{xpls(c_1,0)},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{0}) -> q_{xpls(c_1,0)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{xpls(c_1,0)}) -> q_0,
     xpls(q_{xpls(c_1,0)},q_{c_2}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(c_1,0)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(c_2,xpls(c_1,0)) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(c_2,xpls(c_1,0)),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_1,0)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{0}) -> q_{xpls(c_1,0)},
     xpls(q_{c_2},q_{xpls(c_1,0)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ c_1 -> q_{xpls(c_1,0)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(c_1,0)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{xpls(c_1,0)},q_{c_2}) -> q_0 ]
added rules:
   [ xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_1 -> q_0,
     0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{xpls(c_1,0)},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{xpls(c_1,0)},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{0}) -> q_{xpls(c_1,0)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{xpls(c_1,0)}) -> q_0,
     xpls(q_{xpls(c_1,0)},q_{c_2}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(c_1,0)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(xpls(0,c_1),c_2) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(xpls(0,c_1),c_2),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(0,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{xpls(0,c_1)},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(0,c_1)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)},
     xpls(q_{c_2},q_{xpls(0,c_1)}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(0,c_1)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(0,c_1)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{xpls(0,c_1)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(0,c_1)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(xpls(0,c_1),c_2) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(xpls(0,c_1),c_2),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(0,c_1)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{xpls(0,c_1)},q_{c_2}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(0,c_1)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)},
     xpls(q_{c_2},q_{xpls(0,c_1)}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(0,c_1)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(0,c_1)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{0}) -> q_{xpls(0,c_1)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{xpls(0,c_1)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_1}) -> q_{xpls(0,c_1)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(0,c_1)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(xpls(0,c_2),c_1) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(xpls(0,c_2),c_1),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(0,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(0,c_2)},
     xpls(q_{xpls(0,c_2)},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_2 -> q_{xpls(0,c_2)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(0,c_2)},
     xpls(q_{c_1},q_{xpls(0,c_2)}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(0,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(0,c_2)},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{xpls(0,c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(0,c_2)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(0,c_2)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(0,c_2)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(xpls(0,c_2),c_1) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(xpls(0,c_2),c_1),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(0,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(0,c_2)},
     xpls(q_{xpls(0,c_2)},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_2 -> q_{xpls(0,c_2)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(0,c_2)},
     xpls(q_{c_1},q_{xpls(0,c_2)}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     c_1 -> q_0,
     c_2 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(0,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(0,c_2)},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{xpls(0,c_2)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(0,c_2)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(0,c_2)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(0,c_2)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(xpls(c_1,c_2),0) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(xpls(c_1,c_2),0),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{xpls(c_1,c_2)},q_{0}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{0},q_{xpls(c_1,c_2)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_2 -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{xpls(c_1,c_2)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(xpls(c_1,c_2),0) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(xpls(c_1,c_2),0),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_1,c_2)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{xpls(c_1,c_2)},q_{0}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1 ]
added rules:
   [ 0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{0},q_{xpls(c_1,c_2)}) -> q_0 ]
added rules:
   [ c_1 -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ c_2 -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0 ]
added rules:
   [ 0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{*},q_{0},q_{xpls(c_1,c_2)},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{c_2}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_1},q_{xpls(*,*)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{c_1}) -> q_{xpls(c_1,c_2)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{xpls(c_1,c_2)}) -> q_0,
     xpls(q_{xpls(c_1,c_2)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_1}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(xpls(c_2,0),c_1) and xpls(c_1,c_2) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(xpls(c_2,0),c_1),xpls(c_1,c_2)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_2,0)}
Delta0 = 
   [ 0 -> q_{*},
     s(q_{*}) -> q_{*},
     c_1 -> q_{*},
     c_2 -> q_{*},
     xpls(q_{*},q_{*}) -> q_{*},
     0 -> q_{0},
     c_1 -> q_{c_1},
     c_2 -> q_{c_2},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{0}) -> q_{xpls(c_2,0)},
     xpls(q_{xpls(c_2,0)},q_{c_1}) -> q_0,
     xpls(q_{c_1},q_{c_2}) -> q_1 ]
added rules:
   [ c_2 -> q_{xpls(c_2,0)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_{xpls(*,*)},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{0},q_{c_2}) -> q_{xpls(c_2,0)},
     xpls(q_{c_1},q_{xpls(c_2,0)}) -> q_0 ]
added rules:
   [ c_2 -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_0,
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)} ]
added rules:
   [ 0 -> q_0,
     0 -> q_0,
     s(q_{*}) -> q_0,
     c_1 -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0 ]
added rules:
   [ ]
<F,Q,Q_f,Delta> where
   F = {(0,0),(s,1),(c_1,0),(c_2,0),(xpls,2)}
   Q = {q_0,q_1,q_{c_1},q_{c_2},q_{xpls(c_2,0)},q_{*},q_{0},q_{xpls(*,*)}}
   Qf = {q_0,q_1}
   Delta = 
   [ 0 -> q_0,
     0 -> q_{*},
     0 -> q_{0},
     0 -> q_{xpls(*,*)},
     s(q_{*}) -> q_0,
     s(q_{*}) -> q_{*},
     s(q_{*}) -> q_{xpls(*,*)},
     s(q_{xpls(*,*)}) -> q_0,
     s(q_{xpls(*,*)}) -> q_{xpls(*,*)},
     c_1 -> q_0,
     c_1 -> q_{c_1},
     c_1 -> q_{*},
     c_1 -> q_{xpls(*,*)},
     c_2 -> q_0,
     c_2 -> q_{c_2},
     c_2 -> q_{xpls(c_2,0)},
     c_2 -> q_{*},
     c_2 -> q_{xpls(*,*)},
     xpls(q_{c_1},q_{c_2}) -> q_1,
     xpls(q_{c_1},q_{xpls(c_2,0)}) -> q_0,
     xpls(q_{c_2},q_{c_1}) -> q_1,
     xpls(q_{c_2},q_{0}) -> q_{xpls(c_2,0)},
     xpls(q_{c_2},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(c_2,0)},q_{c_1}) -> q_0,
     xpls(q_{*},q_{*}) -> q_0,
     xpls(q_{*},q_{*}) -> q_{*},
     xpls(q_{*},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{*},q_{xpls(*,*)}) -> q_0,
     xpls(q_{*},q_{xpls(*,*)}) -> q_{xpls(*,*)},
     xpls(q_{0},q_{c_2}) -> q_{xpls(c_2,0)},
     xpls(q_{0},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{c_2}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_0,
     xpls(q_{xpls(*,*)},q_{*}) -> q_{xpls(*,*)},
     xpls(q_{xpls(*,*)},q_{0}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_0,
     xpls(q_{xpls(*,*)},q_{xpls(*,*)}) -> q_{xpls(*,*)} ]
failed (non-empty intersection)
Prove non-joinability of xpls(xpls(c_2,0),c_1) and xpls(c_2,c_1) by rpo
both of rs0^{-1} and rs1^{-1} are not TRSs, don't try.

   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]

*** degrowing completion ***
Terms: {xpls(xpls(c_2,0),c_1),xpls(c_2,c_1)}
Rules:
   [ xpls(?X,0) -> ?X,
     xpls(?X,s(?Y)) -> s(xpls(?x_1,?x_2)),
     xpls(0,?Y) -> ?Y,
     xpls(s(?X),?Y) -> s(xpls(?x_1,?x_2)),
     xpls(xpls(?X,?Y),?Z) -> xpls(?X,xpls(?x_1,?x_2)),
     xpls(?X,?Y) -> xpls(?Y,?X) ]
{0,c_1,c_2,xpls(*,*),xpls(c_2,0)}
Delta0 = 
   [ 0 -> q_{*},
   